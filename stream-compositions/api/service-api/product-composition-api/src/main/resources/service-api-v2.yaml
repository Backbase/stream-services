openapi: 3.0.3
info:
  title: Product composition API
  version: 2.0.0
servers:
  - url: http://localhost:8080/service-api/v2
    description: The server
tags:
  - name: ProductComposition
paths:
  /service-api/v2/ingest/pull:
    post:
      tags:
        - ProductComposition
      summary: Ingests products (in pull mode).
      description: Ingests products (in pull mode).
      operationId: pullIngestProduct
      requestBody:
        description: Product Pull Ingestion Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPullIngestionRequest'
      responses:
        "201":
          description: Products ingested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIngestionResponse'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /service-api/v2/ingest/push:
    post:
      tags:
        - ProductComposition
      summary: Ingests products (in push mode).
      description: Ingests poducts (in push mode).
      operationId: pushIngestProduct
      requestBody:
        description: Push Ingestion Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPushIngestionRequest'
      responses:
        "201":
          description: Products ingested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductIngestionResponse'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    BadRequest:
      required:
        - message
      type: object
      properties:
        message:
          type: string

    ProductPullIngestionRequest:
      type: object
      properties:
        legalEntityExternalId:
          type: string
          description: Legal Entity External Id
          example: testuser
        legalEntityInternalId:
          type: string
          description: Legal Entity Internal Id
          example: 4028818483400316018340775f2c000d
        serviceAgreementExternalId:
          type: string
          description: Service Agreement External Id
          example: sa_retail_b086f116-3132-3d70-b878-a648fecf4106
        serviceAgreementInternalId:
          type: string
          description: Service Agreement Internal Id
          example: 402881878008bdd8018014daf54d001d
        userExternalId:
          type: string
          description: Backbase DBS external userid
          example: testuser
        userInternalId:
          type: string
          description: Backbase DBS userid
          example: 2df8a3f8-b500-433b-8092-af8f95e8488e
        source:
          type: string
          description: Source of the ingestion process from where the ingestion was triggered.
          example: nightly_ingestion
        referenceJobRoleNames:
          $ref: '../../../../../../../api/stream-legal-entity/openapi.yaml#/components/schemas/JobProfileUser/properties/referenceJobRoleNames'
          description: The reference job roles that should get assigned to the user
        membershipAccounts:
          type: array
          items:
            type: string
        additions:
          type: object
          additionalProperties:
            type: string

    ProductPushIngestionRequest:
      type: object
      properties:
        source:
          type: string
          description: Source of the ingestion process from where the ingestion was triggered.
          example: nightly_ingestion
        productGroup:
          $ref: '../../../../../../../api/stream-legal-entity/openapi.yaml#/components/schemas/ProductGroup'

    ProductIngestionResponse:
      type: object
      properties:
        productGroups:
          type: array
          items:
            $ref: '../../../../../../../api/stream-legal-entity/openapi.yaml#/components/schemas/ProductGroup'

    InternalServerError:
      required:
        - message
      type: object
      properties:
        message:
          type: string

