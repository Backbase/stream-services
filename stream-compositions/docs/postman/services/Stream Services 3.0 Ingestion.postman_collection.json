{
	"info": {
		"_postman_id": "92445a40-d3f7-471a-a671-e73d31211625",
		"name": "Stream Services 3.0 Ingestion",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14432275"
	},
	"item": [
		{
			"name": "Streams 3.0",
			"item": [
				{
					"name": "Ingest Legal Entity Service  (SME Employee - Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"/*postman.setEnvironmentVariable(\"Emp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Emp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Emp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Sme_Employee_Legal_Entity}}\",\n    \"taxId\": \"7587771894\",\n    \"userExternalId\": \"SmeEmp1\",\n    \"isAdmin\": false,\n    \"identityUserLinkStrategy\": \"CREATE_IN_IDENTITY\",\n    \"realmName\": \"{{Realm}}\",\n    \"parentLegalEntityExternalId\": \"{{Root_Legal_Entity}}\",\n    \"referenceJobRoleNames\": [\n        \"Bank Back Office Support\"\n    ],\n    \"productChainEnabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{legal-entity-composition-url}}/service-api/v2/ingest/pull",
							"host": [
								"{{legal-entity-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"ingest",
								"pull"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Legal Entity Service  (US Employee - Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"/*postman.setEnvironmentVariable(\"Emp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Emp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Emp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Us_Employee_Legal_Entity}}\",\n    \"taxId\": \"7587771894\",\n    \"userExternalId\": \"UsEmp1\",\n    \"isAdmin\": false,\n    \"identityUserLinkStrategy\": \"CREATE_IN_IDENTITY\",\n    \"realmName\": \"{{Realm}}\",\n    \"parentLegalEntityExternalId\": \"{{Root_Legal_Entity}}\",\n    \"referenceJobRoleNames\": [\n        \"Bank Back Office Support\"\n    ],\n    \"productChainEnabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{legal-entity-composition-url}}/service-api/v2/ingest/pull",
							"host": [
								"{{legal-entity-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"ingest",
								"pull"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Legal Entity Service  (SME Corporate - Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"/*postman.setEnvironmentVariable(\"Emp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Emp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Emp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Corporate_Legal_Entity}}\",\n    \"taxId\": \"7587771894\",\n    \"userExternalId\": \"CorpUser1\",\n    \"isAdmin\": false,\n    \"identityUserLinkStrategy\": \"CREATE_IN_IDENTITY\",\n    \"realmName\": \"{{Realm}}\",\n    \"parentLegalEntityExternalId\": \"{{Root_Legal_Entity}}\",\n    \"referenceJobRoleNames\": [\n        \"Bank Administrator\",\n        \"Senior Payment Specialist\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{legal-entity-composition-url}}/service-api/v2/ingest/pull",
							"host": [
								"{{legal-entity-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"ingest",
								"pull"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Legal Entity Service  (US Retail - Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"/*postman.setEnvironmentVariable(\"Emp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Emp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Emp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Retail_Legal_Entity}}\",\n    \"taxId\": \"7587771894\",\n    \"userExternalId\": \"RetUser1\",\n    \"isAdmin\": false,\n    \"identityUserLinkStrategy\": \"CREATE_IN_IDENTITY\",\n    \"realmName\": \"{{Realm}}\",\n    \"parentLegalEntityExternalId\": \"{{Root_Legal_Entity}}\",\n    \"referenceJobRoleNames\": [\n        \"Bank Administrator\",\n        \"Senior Payment Specialist\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{legal-entity-composition-url}}/service-api/v2/ingest/pull",
							"host": [
								"{{legal-entity-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"ingest",
								"pull"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Product Catalog Service  (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"/*postman.setEnvironmentVariable(\"Emp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Emp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Emp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalParameters\":{}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{product-catalog-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{product-catalog-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Payment Order Service (Push Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"/*postman.setEnvironmentVariable(\"Emp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Emp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Emp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"paymentOrders\": [\n        {\n            \"audit\": {\n                \"timestamp\": \"2022-11-04T10:00:00\",\n                \"user\": \"admin\"\n            },\n            \"id\": \"02d7c650-ec13-485c-b03c-b59465036023\",\n            \"bankReferenceId\": \"bankBranchCode1\",\n            \"internalUserId\": \"02d7c650-ec13-485c-b03c-b59465036023\",\n            \"originatorAccount\": {\n                \"arrangementId\": \"5266ef3f-105b-4483-882d-d58e4e7a1b57\",\n                \"externalArrangementId\": \"Sara Account\",\n                \"identification\": {\n                    \"identification\": \"NL67ABNA1070230618\",\n                    \"schemeName\": \"IBAN\"\n                },\n                \"additions\": {}\n            },\n            \"totalAmount\": {\n                \"amount\": \"1000.29\",\n                \"currencyCode\": \"EUR\"\n            },\n            \"requestedExecutionDate\": \"2022-11-08\",\n            \"paymentType\": \"Single\",\n            \"serviceAgreementId\": \"8a8080f3843e21ca01843e275bf00004\",\n            \"confirmationId\": \"123456\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{payment-order-composition-url}}/service-api/v2/ingest/push",
							"host": [
								"{{payment-order-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"ingest",
								"push"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Integration Ingestion Services",
			"item": [
				{
					"name": "Product Catalog Ingestion Integration Service",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{product-catalog-ingestion-url}}/integration-api/v2/product-catalog",
							"host": [
								"{{product-catalog-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"product-catalog"
							]
						}
					},
					"response": []
				},
				{
					"name": "Legal Entity Ingestion Integration Service (Employee)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Employee_Legal_Entity}}\",\n    \"taxId\": \"7587771894\",\n    \"userExternalId\": \"Emp1\",\n    \"parentLegalEntityExternalId\": \"{{Root_Legal_Entity}}\",\n    \"realmName\": \"{{Realm}}\",\n    \"referenceJobRoleNames\": [\n        \"Flow Admin Role\"\n    ],\n    \"isAdmin\": false,\n    \"identityUserLinkStrategy\": \"CREATE_IN_IDENTITY\"\n}"
						},
						"url": {
							"raw": "{{legal-entity-ingestion-url}}/integration-api/v2/legal-entity",
							"host": [
								"{{legal-entity-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"legal-entity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Legal Entity Ingestion Integration Service (Corporate)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Corporate_Legal_Entity}}\",\n    \"taxId\": \"7587771894\",\n    \"userExternalId\": \"Corp1\",\n    \"parentLegalEntityExternalId\": \"{{Root_Legal_Entity}}\",\n    \"realmName\": \"{{Realm}}\",\n    \"referenceJobRoleNames\": [\n        \"Business Banking Admin Role\"\n    ],\n    \"isAdmin\": false,\n    \"identityUserLinkStrategy\": \"CREATE_IN_IDENTITY\"\n}"
						},
						"url": {
							"raw": "{{legal-entity-ingestion-url}}/integration-api/v2/legal-entity",
							"host": [
								"{{legal-entity-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"legal-entity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Ingestion Integration Service",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Corporate_Legal_Entity}}\",\n    \"legalEntityInternalId\": \"5028c4b28076fc48018076ff35fe0008\",\n    \"serviceAgreementExternalId\": \"sa_{{Corporate_Legal_Entity}}\",\n    \"serviceAgreementInternalId\": \"4028c4b28076fc48018076ff35fe0008\",\n    \"userExternalId\": \"Corp1\",\n    \"userInternalId\": \"2968c88a-59be-48ef-900e-9c46398ef0ed\",\n    \"referenceJobRoleNames\": [\n        \"Business Banking Admin Role\"\n    ],\n    \"membershipAccounts\": null,\n    \"additionalParameters\": {}\n}"
						},
						"url": {
							"raw": "{{product-ingestion-url}}/integration-api/v2/product-group",
							"host": [
								"{{product-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"product-group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transactions Ingestion Integration Service",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"arrangementId\": \"7028c4b28076fc48018076ff35fe0008\",\n    \"externalArrangementId\": \"arra5028c4b\",\n    \"dateRangeStart\": {{$timestamp}},\n    \"dateRangeEnd\": {{$timestamp}},\n    \"billingCycles\": 5,\n    \"additionalParameters\": {}\n}"
						},
						"url": {
							"raw": "{{transaction-ingestion-url}}/integration-api/v2/transactions",
							"host": [
								"{{transaction-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"transactions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login as Corporate Customer",
			"item": [
				{
					"name": "01. Login as Corporate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access_token\", response.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "WWW-Authenticate",
								"type": "text",
								"value": "Bearer challenge_types=otp-choice",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "CorpUser1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "CorpUser1",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "bb-tooling-client",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{identity-url}}/auth/realms/backbase/protocol/openid-connect/token",
							"host": [
								"{{identity-url}}"
							],
							"path": [
								"auth",
								"realms",
								"backbase",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "02. Get Available Contexts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const service_agreement_for_context = pm.response.json()[0].id",
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"",
									"postman.setEnvironmentVariable(\"service_agreement_for_context\", service_agreement_for_context);",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext/serviceagreements",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext",
								"serviceagreements"
							]
						}
					},
					"response": []
				},
				{
					"name": "03. Set Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-Token",
								"value": "{{xsrf_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"serviceAgreementId\": \"{{service_agreement_for_context}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login as Retail User",
			"item": [
				{
					"name": "01. Login as Retail User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access_token\", response.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "WWW-Authenticate",
								"type": "text",
								"value": "Bearer challenge_types=otp-choice",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "RetUser1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "RetUser1",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "bb-tooling-client",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{identity-url}}/auth/realms/backbase/protocol/openid-connect/token",
							"host": [
								"{{identity-url}}"
							],
							"path": [
								"auth",
								"realms",
								"backbase",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "02. Get Available Contexts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const service_agreement_for_context = pm.response.json()[0].id",
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"",
									"postman.setEnvironmentVariable(\"service_agreement_for_context\", service_agreement_for_context);",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext/serviceagreements",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext",
								"serviceagreements"
							]
						}
					},
					"response": []
				},
				{
					"name": "03. Set Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-Token",
								"value": "{{xsrf_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"serviceAgreementId\": \"{{service_agreement_for_context}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login as SME Employee",
			"item": [
				{
					"name": "01. Login as Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access_token\", response.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "WWW-Authenticate",
								"type": "text",
								"value": "Bearer challenge_types=otp-choice",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "SmeEmp1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "SmeEmp1",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "bb-tooling-client",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{identity-url}}/auth/realms/backbase/protocol/openid-connect/token",
							"host": [
								"{{identity-url}}"
							],
							"path": [
								"auth",
								"realms",
								"backbase",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "02. Get Available Contexts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const service_agreement_for_context = pm.response.json()[0].id",
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"",
									"postman.setEnvironmentVariable(\"service_agreement_for_context\", service_agreement_for_context);",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext/serviceagreements",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext",
								"serviceagreements"
							]
						}
					},
					"response": []
				},
				{
					"name": "03. Set Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-Token",
								"value": "{{xsrf_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"serviceAgreementId\": \"{{service_agreement_for_context}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "04. Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/sme-onboarding/client-api/iam/v2/users/me/profile",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"sme-onboarding",
								"client-api",
								"iam",
								"v2",
								"users",
								"me",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "05. Get User Permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/sme-onboarding/client-api/iam/v2/users/me/permissions?resource=process-definition:app-onboarding",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"sme-onboarding",
								"client-api",
								"iam",
								"v2",
								"users",
								"me",
								"permissions"
							],
							"query": [
								{
									"key": "resource",
									"value": "process-definition:app-onboarding"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login as US Employee",
			"item": [
				{
					"name": "01. Login as Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access_token\", response.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "WWW-Authenticate",
								"type": "text",
								"value": "Bearer challenge_types=otp-choice",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "UsEmp1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "UsEmp1",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "bb-tooling-client",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{identity-url}}/auth/realms/backbase/protocol/openid-connect/token",
							"host": [
								"{{identity-url}}"
							],
							"path": [
								"auth",
								"realms",
								"backbase",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "02. Get Available Contexts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const service_agreement_for_context = pm.response.json()[0].id",
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"",
									"postman.setEnvironmentVariable(\"service_agreement_for_context\", service_agreement_for_context);",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext/serviceagreements",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext",
								"serviceagreements"
							]
						}
					},
					"response": []
				},
				{
					"name": "03. Set Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-Token",
								"value": "{{xsrf_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"serviceAgreementId\": \"{{service_agreement_for_context}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "04. Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/us-onboarding/client-api/iam/v2/users/me/profile",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"us-onboarding",
								"client-api",
								"iam",
								"v2",
								"users",
								"me",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "05. Get User Permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/us-onboarding/client-api/iam/v2/users/me/permissions?resource=process-definition:us-onboarding",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"us-onboarding",
								"client-api",
								"iam",
								"v2",
								"users",
								"me",
								"permissions"
							],
							"query": [
								{
									"key": "resource",
									"value": "process-definition:us-onboarding"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
