{
	"info": {
		"_postman_id": "50f38965-6ebc-4394-b4b9-7c5d66e708aa",
		"name": "Ingestion (Stream Services 3.0)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login as Corporate Customer",
			"item": [
				{
					"name": "01. Login as Corp1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access_token\", response.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "WWW-Authenticate",
								"type": "text",
								"value": "Bearer challenge_types=otp-choice",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "Corp1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Corp1",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "bb-tooling-client",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{identity-url}}/auth/realms/backbase/protocol/openid-connect/token",
							"host": [
								"{{identity-url}}"
							],
							"path": [
								"auth",
								"realms",
								"backbase",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "02. Get Available Contexts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const service_agreement_for_context = pm.response.json()[0].id",
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"",
									"postman.setEnvironmentVariable(\"service_agreement_for_context\", service_agreement_for_context);",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext/serviceagreements",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext",
								"serviceagreements"
							]
						}
					},
					"response": []
				},
				{
					"name": "03. Set Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-Token",
								"value": "{{xsrf_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"serviceAgreementId\": \"{{service_agreement_for_context}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login as Employee",
			"item": [
				{
					"name": "01. Login as Emp1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access_token\", response.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "WWW-Authenticate",
								"type": "text",
								"value": "Bearer challenge_types=otp-choice",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "Emp1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Emp1",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "bb-tooling-client",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{identity-url}}/auth/realms/backbase/protocol/openid-connect/token",
							"host": [
								"{{identity-url}}"
							],
							"path": [
								"auth",
								"realms",
								"backbase",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "02. Get Available Contexts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const service_agreement_for_context = pm.response.json()[0].id",
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"",
									"postman.setEnvironmentVariable(\"service_agreement_for_context\", service_agreement_for_context);",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext/serviceagreements",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext",
								"serviceagreements"
							]
						}
					},
					"response": []
				},
				{
					"name": "03. Set Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xsrf_token = postman.getResponseCookie(\"XSRF-TOKEN\").value",
									"postman.setEnvironmentVariable(\"xsrf_token\", xsrf_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-Token",
								"value": "{{xsrf_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"serviceAgreementId\": \"{{service_agreement_for_context}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{edge-url}}/api/access-control/client-api/v2/accessgroups/usercontext",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"access-control",
								"client-api",
								"v2",
								"accessgroups",
								"usercontext"
							]
						}
					},
					"response": []
				},
				{
					"name": "04. Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/sme-onboarding/client-api/iam/v2/users/me/profile",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"sme-onboarding",
								"client-api",
								"iam",
								"v2",
								"users",
								"me",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "05. Get User Permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{edge-url}}/api/sme-onboarding/client-api/iam/v2/users/me/permissions?resource=process-definition:app-onboarding",
							"host": [
								"{{edge-url}}"
							],
							"path": [
								"api",
								"sme-onboarding",
								"client-api",
								"iam",
								"v2",
								"users",
								"me",
								"permissions"
							],
							"query": [
								{
									"key": "resource",
									"value": "process-definition:app-onboarding"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Streams 3.0 Chaining",
			"item": [
				{
					"name": "Ingest Legal Entity - SME Flow (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Emp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Emp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Emp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Employee_Legal_Entity}}\",\n    \"taxId\": \"7587771894\",\n    \"userExternalId\": \"Emp999\",\n    \"isAdmin\": false,\n    \"identityUserLinkStrategy\": \"CREATE_IN_IDENTITY\",\n    \"realmName\": \"{{Realm}}\",\n    \"parentLegalEntityExternalId\": \"{{Root_Legal_Entity}}\",\n    \"referenceJobRoleNames\": [\n        \"Business Banking Admin Role\",\n        \"Flow Admin Role\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{legal-entity-composition-url}}/service-api/v2/ingest/pull",
							"host": [
								"{{legal-entity-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"ingest",
								"pull"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Product - SME Flow (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Emp_CurrentAccounts_Internal_ID\", response.productGgroup.currentAccounts[0].internalId);",
									"postman.setEnvironmentVariable(\"Emp_CurrentAccounts_External_ID\", response.productGgroup.currentAccounts[0].externalId);",
									"postman.setEnvironmentVariable(\"Emp_SavingAccounts_Internal_ID\", response.productGgroup.savingAccounts[0].internalId);",
									"postman.setEnvironmentVariable(\"Emp_SavingAccounts_External_ID\", response.productGgroup.savingAccounts[0].externalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Employee_Legal_Entity}}\",\n    \"serviceAgreementExternalId\": \"sa_{{Employee_Legal_Entity}}\",\n    \"serviceAgreementInternalId\": \"{{Emp_MSA_Internal_ID}}\",\n    \"userExternalId\": \"{{Emp_User_External_ID}}\",\n    \"userInternalId\": \"{{Emp_User_Internal_ID}}\",\n    \"membershipAccounts\": null,\n    \"additionalParameters\": {\n        \"referenceJobRoleName\": \"Business Banking Admin Role,Flow Admin Role\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{product-composition-url}}/service-api/v2/ingest/pull",
							"host": [
								"{{product-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"ingest",
								"pull"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Transactions - SME Emp (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userExternalId\":\"{{Emp_User_External_ID}}\",\n   \"productGroup\":{\n      \"currentAccounts\":[\n         {\n            \"internalId\":\"{{Emp_CurrentAccounts_Internal_ID}}\",\n            \"externalId\":\"{{Emp_User_External_ID}}-S1\",\n            \"productTypeExternalId\":\"{{Emp_CurrentAccounts_External_ID}}\"\n         }\n      ],\n      \"savingAccounts\":[\n         {\n            \"internalId\":\"{{Emp_SavingAccounts_Internal_ID}}\",\n            \"externalId\":\"{{Emp_User_External_ID}}-S2\",\n            \"productTypeExternalId\":\"{{Emp_SavingAccounts_External_ID}}\"\n         }\n      ]\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{transaction-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{transaction-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transaction Cursor",
			"item": [
				{
					"name": "Get Transaction Cursor by ArrangementId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{transaction-cursor-url}}/service-api/v2/cursor/arrangement/4337f8cc-d66d-41b3-a00e-f71ff15d93co",
							"host": [
								"{{transaction-cursor-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"cursor",
								"arrangement",
								"4337f8cc-d66d-41b3-a00e-f71ff15d93co"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction Cursor by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{transaction-cursor-url}}/service-api/v2/cursor/f4bad6f3-54a0-40f4-ba58-bae63190372",
							"host": [
								"{{transaction-cursor-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"cursor",
								"f4bad6f3-54a0-40f4-ba58-bae63190372"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Transaction Cursor by id/arrangementid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"5337f8cc-d66d-41b3-a00e-f71ff15d93cg\",\n    \"arrangementId\":\"4337f8cc-d66d-41b3-a00e-f71ff15d93ct\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{transaction-cursor-url}}/service-api/v2/cursor/delete",
							"host": [
								"{{transaction-cursor-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"cursor",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upsert Transaction Cursor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cursor\": {\n        \"arrangementId\": \"4337f8cc-d66d-41b3-a00e-f71ff15d93cl\",\n        \"extArrangementId\": \"6337f8cc-d66d-41b3-a00e-f71ff15d93cl\",\n        \"lastTxnIds\": [\n            \"8888888\",\n            \"333333\",\n            \"444444\",\n            \"555555\",\n            \"666666\"\n        ],\n        \"legalEntityId\": \"{{Employee_Legal_Entity}}\",\n        \"status\": \"SUCCESS\",\n        \"additions\": {\n            \"Key1\": \"Val111\",\n            \"Key2\": \"Val222\",\n            \"Key3\": \"Val333\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{transaction-cursor-url}}/service-api/v2/cursor/upsert",
							"host": [
								"{{transaction-cursor-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"cursor",
								"upsert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Transaction Cursor by ArrangementId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"FAILED\",\n        \"lastTxnDate\":\"2022-05-24 03:18:59\",\n        \"lastTxnIds\": \"11,12,13,14,15\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{transaction-cursor-url}}/service-api/v2/cursor/arrangement/4337f8cc-d66d-41b3-a00e-f71ff15d93cg",
							"host": [
								"{{transaction-cursor-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"cursor",
								"arrangement",
								"4337f8cc-d66d-41b3-a00e-f71ff15d93cg"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Streams 3.0 Without Chaining",
			"item": [
				{
					"name": "Get Product Catalog (Product Catalog Ingestion Integration Service)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{product-catalog-ingestion-url}}/integration-api/v2/product-catalog",
							"host": [
								"{{product-catalog-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"product-catalog"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Product Catalog (Pull Mode)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"additionalParameters\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{product-catalog-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{product-catalog-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Legal Entity (LE Ingestion Integration Service)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{legal-entity-ingestion-url}}/integration-api/v2/legal-entity?externalId=beta-corp-ext1&userName=Corp1&realmName=backbase&parentExternalId=beta-bank&referenceJobRoleName=Business Banking Admin Role",
							"host": [
								"{{legal-entity-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"legal-entity"
							],
							"query": [
								{
									"key": "externalId",
									"value": "beta-corp-ext1"
								},
								{
									"key": "userName",
									"value": "Corp1"
								},
								{
									"key": "realmName",
									"value": "backbase"
								},
								{
									"key": "parentExternalId",
									"value": "beta-bank"
								},
								{
									"key": "referenceJobRoleName",
									"value": "Business Banking Admin Role"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Legal Entity (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Corp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Corp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Corp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Corporate_Legal_Entity}}\",\n    \"additionalParameters\": {\n        \"userName\": \"Corp1\",\n        \"fullName\": \"Corp1 User\",\n        \"mobileNumber\": \"1234567890\",\n        \"emailAddress\": \"Corp1@backbase.com\",\n        \"realmName\": \"{{Realm}}\",\n        \"parentExternalId\": \"{{Root_Legal_Entity}}\",\n        \"referenceJobRoleName\": \"Business Banking Admin Role\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{legal-entity-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{legal-entity-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Legal Entity - SME Flow (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Emp_User_Internal_ID\", response.legalEntity.users[0].user.internalId);",
									"postman.setEnvironmentVariable(\"Emp_User_External_ID\", response.legalEntity.users[0].user.externalId);",
									"postman.setEnvironmentVariable(\"Emp_MSA_Internal_ID\", response.legalEntity.masterServiceAgreement.internalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Employee_Legal_Entity}}\",\n    \"chainProductCompositionRequired\": \"true\",\n    \"additionalParameters\": {\n        \"userName\": \"Emp1\",\n        \"fullName\": \"Emp1 User\",\n        \"mobileNumber\": \"1234567890\",\n        \"emailAddress\": \"Emp1@backbase.com\",\n        \"realmName\": \"{{Realm}}\",\n        \"parentExternalId\": \"{{Root_Legal_Entity}}\",\n        \"referenceJobRoleName\": \"Business Banking Admin Role,Flow Admin Role\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{legal-entity-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{legal-entity-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ingest Product Group (Product Ingestion Integration Service)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJiYi1jbGllbnQiLCJhdWQiOlsiYmItb2F1dGgiXSwic2NvcGUiOlsiYXBpOnNlcnZpY2UiXSwiaXNzIjoidG9rZW4tY29udmVydGVyIiwiZXhwIjoxNjQ2OTQ1NDI2LCJqdGkiOiIzMmY1NGZjZi1jMWEwLTQ5NDMtYTRmOS1jOWUxNTg4NWY5YTEiLCJjbGllbnRfaWQiOiJiYi1jbGllbnQifQ.wg0CyD6tGHRmYuJwwqaaJj2qiIX3oAxkfrhHHnfAQJs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{product-ingestion-url}}/integration-api/v2/product-group?legalEntityExternalId=beta-corp-ext1&serviceAgreementExternalId=sa_beta-corp-ext1&serviceAgreementInternalId=4028c4b28076fc48018076ff35fe0008&userExternalId=Corp1&internalUserId=2968c88a-59be-48ef-900e-9c46398ef0ed&referenceJobRoleName=Business Banking Admin Role",
							"host": [
								"{{product-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"product-group"
							],
							"query": [
								{
									"key": "legalEntityExternalId",
									"value": "beta-corp-ext1"
								},
								{
									"key": "serviceAgreementExternalId",
									"value": "sa_beta-corp-ext1"
								},
								{
									"key": "serviceAgreementInternalId",
									"value": "4028c4b28076fc48018076ff35fe0008"
								},
								{
									"key": "userExternalId",
									"value": "Corp1"
								},
								{
									"key": "internalUserId",
									"value": "2968c88a-59be-48ef-900e-9c46398ef0ed"
								},
								{
									"key": "referenceJobRoleName",
									"value": "Business Banking Admin Role"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Product (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Corp_CurrentAccounts_Internal_ID\", response.productGgroup.currentAccounts[0].internalId);",
									"postman.setEnvironmentVariable(\"Corp_CurrentAccounts_External_ID\", response.productGgroup.currentAccounts[0].externalId);",
									"postman.setEnvironmentVariable(\"Corp_SavingAccounts_Internal_ID\", response.productGgroup.savingAccounts[0].internalId);",
									"postman.setEnvironmentVariable(\"Corp_SavingAccounts_External_ID\", response.productGgroup.savingAccounts[0].externalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Corporate_Legal_Entity}}\",\n    \"serviceAgreementExternalId\": \"sa_{{Corporate_Legal_Entity}}\",\n    \"serviceAgreementInternalId\": \"{{Corp_MSA_Internal_ID}}\",\n    \"userExternalId\" : \"{{Corp_User_External_ID}}\",\n     \"additionalParameters\": {\n        \"internalUserId\": \"{{Corp_User_Internal_ID}}\",\n        \"referenceJobRoleName\": \"Business Banking Admin Role\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{product-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{product-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Product - SME Flow (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Emp_CurrentAccounts_Internal_ID\", response.productGgroup.currentAccounts[0].internalId);",
									"postman.setEnvironmentVariable(\"Emp_CurrentAccounts_External_ID\", response.productGgroup.currentAccounts[0].externalId);",
									"postman.setEnvironmentVariable(\"Emp_SavingAccounts_Internal_ID\", response.productGgroup.savingAccounts[0].internalId);",
									"postman.setEnvironmentVariable(\"Emp_SavingAccounts_External_ID\", response.productGgroup.savingAccounts[0].externalId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"legalEntityExternalId\": \"{{Employee_Legal_Entity}}\",\n    \"serviceAgreementExternalId\": \"sa_{{Employee_Legal_Entity}}\",\n    \"serviceAgreementInternalId\": \"{{Emp_MSA_Internal_ID}}\",\n    \"userExternalId\" :\"{{Emp_User_External_ID}}\",\n     \"additionalParameters\": {\n        \"internalUserId\": \"{{Emp_User_Internal_ID}}\",\n        \"referenceJobRoleName\": \"Business Banking Admin Role,Flow Admin Role\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{product-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{product-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ingest Transactions (Transactions Ingestion Integration Service)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userExternalId\":\"Corp1\",\n   \"productGroup\":{\n      \"currentAccounts\":[\n         {\n            \"internalId\":\"1581ec6f-3f08-4926-918e-dd62579faa6a\",\n            \"externalId\":\"Corp1-S1\",\n            \"productTypeExternalId\":\"CurCorp1\"\n         }\n      ],\n      \"savingAccounts\":[\n         {\n            \"internalId\":\"1d6535da-6880-4e4e-b2ac-edd6bc37b289\",\n            \"externalId\":\"Corp1-S2\",\n            \"productTypeExternalId\":\"SavCorp1\"\n         }\n      ]\n   }\n}"
						},
						"url": {
							"raw": "{{transaction-ingestion-url}}/integration-api/v2/transactions",
							"host": [
								"{{transaction-ingestion-url}}"
							],
							"path": [
								"integration-api",
								"v2",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Transactions (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userExternalId\":\"{{Corp_User_External_ID}}\",\n   \"productGroup\":{\n      \"currentAccounts\":[\n         {\n            \"internalId\":\"{{Corp_CurrentAccounts_Internal_ID}}\",\n            \"externalId\":\"{{Corp_User_External_ID}}-S1\",\n            \"productTypeExternalId\":\"{{Corp_CurrentAccounts_External_ID}}\"\n         }\n      ],\n      \"savingAccounts\":[\n         {\n            \"internalId\":\"{{Corp_SavingAccounts_Internal_ID}}\",\n            \"externalId\":\"{{Corp_User_External_ID}}-S2\",\n            \"productTypeExternalId\":\"{{Corp_SavingAccounts_External_ID}}\"\n         }\n      ]\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{transaction-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{transaction-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ingest Transactions - SME Emp (Pull Mode)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userExternalId\":\"{{Emp_User_External_ID}}\",\n   \"productGroup\":{\n      \"currentAccounts\":[\n         {\n            \"internalId\":\"{{Emp_CurrentAccounts_Internal_ID}}\",\n            \"externalId\":\"{{Emp_User_External_ID}}-S1\",\n            \"productTypeExternalId\":\"{{Emp_CurrentAccounts_External_ID}}\"\n         }\n      ],\n      \"savingAccounts\":[\n         {\n            \"internalId\":\"{{Emp_SavingAccounts_Internal_ID}}\",\n            \"externalId\":\"{{Emp_User_External_ID}}-S2\",\n            \"productTypeExternalId\":\"{{Emp_SavingAccounts_External_ID}}\"\n         }\n      ]\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{transaction-composition-url}}/service-api/v2/pull-ingestion",
							"host": [
								"{{transaction-composition-url}}"
							],
							"path": [
								"service-api",
								"v2",
								"pull-ingestion"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}