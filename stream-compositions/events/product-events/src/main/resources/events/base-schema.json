{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "schemas" : {
    "BaseProduct" : {
      "title" : "Base Product",
      "type" : "object",
      "properties" : {
        "internalId" : {
          "$ref" : "#/schemas/InternalIdentifier"
        },
        "externalId" : {
          "maxLength" : 50,
          "minLength" : 1,
          "type" : "string",
          "description" : "A unique identifier for the product coming from the core banking system."
        },
        "productTypeExternalId" : {
          "title" : "External ID of the Product Type as setup in Product Summary",
          "maxLength" : 64,
          "minLength" : 1,
          "pattern" : "^[^\\r\\n]{1,64}$",
          "type" : "string"
        },
        "legalEntities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/schemas/LegalEntityReference"
          }
        },
        "name" : {
          "maxLength" : 50,
          "type" : "string",
          "description" : "The name that can be assigned by the bank to label a product."
        },
        "bankAlias" : {
          "maxLength" : 50,
          "type" : "string",
          "description" : "The name that can be assigned by the bank to label the product."
        },
        "state" : {
          "$ref" : "#/schemas/BaseProduct_state"
        },
        "currency" : {
          "$ref" : "#/schemas/CurrencyCode"
        },
        "accountOpeningDate" : {
          "type" : "string",
          "description" : "The date of activation of the account in the bank's system.",
          "javaType": "java.time.OffsetDateTime",
          "format" : "date-time"
        },
        "lastUpdateDate" : {
          "type" : "string",
          "description" : "Last date of balance (or other) parameter update for the particular product",
          "javaType": "java.time.OffsetDateTime",
          "format" : "date-time"
        }
      },
      "description" : "The Base product holds all common properties between different product types\n"
    },
    "BaseProduct_state" : {
      "type" : "object",
      "properties" : {
        "externalStateId" : {
          "maxLength" : 50,
          "type" : "string",
          "description" : "An external unique identifier for the product state object."
        },
        "state" : {
          "maxLength" : 50,
          "type" : "string",
          "description" : "Name that describes the specific product state."
        }
      }
    },
    "CurrencyCode" : {
      "pattern" : "^[A-Z]{3}$",
      "type" : "string",
      "description" : "The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount"
    },
    "JobProfileUser" : {
      "required" : [ "user" ],
      "type" : "object",
      "properties" : {
        "user" : {
          "$ref" : "#/schemas/User"
        },
        "legalEntityReference" : {
          "$ref" : "#/schemas/LegalEntityReference"
        },
        "referenceJobRoleNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ServiceAgreement" : {
      "title" : "Service Agreement",
      "properties" : {
        "internalId" : {
          "$ref" : "#/schemas/InternalIdentifier"
        },
        "externalId" : {
          "$ref" : "#/schemas/ExternalIdentifier"
        },
        "name" : {
          "maxLength" : 128,
          "minLength" : 1,
          "pattern" : "^\\S(.*(\\S))?$",
          "type" : "string",
          "description" : "The service agreement name"
        },
        "description" : {
          "maxLength" : 255,
          "minLength" : 1,
          "pattern" : "^(\\S|\\n)((.|\\n)*(\\S|\\n))?$",
          "type" : "string",
          "description" : "Description"
        },
        "isMaster" : {
          "type" : "boolean",
          "description" : "Master flag"
        }
      },
      "description" : "The formal vehicle that allows users of one entity to access products of that or other entities\nA Service agreement is:\n- A contract that includes one or more legal entities. A legal entity that is participating in a service agreement can allow a subset of its users to act through that service agreement and/or allow a subset of its products to be accessed through the service agreement. Within each service agreement, permissions to perform specific tasks are granted to users, including access to products shared by one or more legal entities (participating in that service agreement). As such, a service agreement is a way to give third party users specific access to your products.\n- A special kind of service agreement is called the master service agreement. This service agreement has one legal entity participant and once configured, the participant cannot be changed. Important to know is that once the user is granted with administrative permissions (e.g. manage account groups), he or she has the power to execute the task in any service agreement lower in the hierarchy. For example, if the user of the bank is assigned with manage account groups permission in the master service agreement of the bank, the user can manage account groups in any service agreement lower in the hierarchy.\n- A service agreement may be restricted in time, by setting a time bound. Permissions granted to users in the time-restricted service agreement, are active and may be consumed, only while the time bound is valid.\n"
    },
    "InternalIdentifier" : {
      "title" : "Interal Identifier",
      "type" : "string",
      "description" : "Internal Read Only Identifier",
      "readOnly" : true
    },
    "ExternalIdentifier" : {
      "title" : "External Identifier",
      "maxLength" : 64,
      "minLength" : 1,
      "pattern" : "^[^\\r\\n]{1,64}$",
      "type" : "string",
      "description" : "External legal entity identifier."
    },
    "BookedBalance" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "currencyCode" : {
          "$ref" : "#/schemas/CurrencyCode"
        }
      },
      "description" : "Booked Balance"
    },
    "AvailableBalance" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "currencyCode" : {
          "$ref" : "#/schemas/CurrencyCode"
        }
      },
      "description" : "Available Balance"
    },
    "CreditAccount" : {
      "type" : "boolean",
      "description" : "Indicator whether or not the product can be used in payment orders as credit account."
    },
    "DebitAccount" : {
      "type" : "boolean",
      "description" : "Indicator whether or not the product can be used in payment orders as debit account."
    },
    "IBAN" : {
      "maxLength" : 34,
      "pattern" : "^(AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW).*",
      "type" : "string",
      "description" : "Specifying the IBAN of the account."
    },
    "BBAN" : {
      "maxLength" : 50,
      "type" : "string",
      "description" : "Specifying the BBAN of the account."
    },
    "CardNumber" : {
      "type" : "number"
    },
    "CreditCardAccountNumber" : {
      "maxLength" : 32,
      "type" : "string",
      "description" : "The number of the account the credit card transactions settle on (so actually the reference to the settlement account of the card)?"
    },
    "BankBranchCode" : {
      "maxLength" : 20,
      "type" : "string",
      "description" : "(This is to accomodate additional country specific fields like Sort Code in UK)"
    },
    "PrincipalAmount" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "currencyCode" : {
          "$ref" : "#/schemas/CurrencyCode"
        }
      },
      "description" : "The amount that was (originally) contracted for the respective product. This is mainly used in the context of loans and deposits."
    },
    "CreditLimit" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "currencyCode" : {
          "$ref" : "#/schemas/CurrencyCode"
        }
      },
      "description" : "Credit Limit"
    },
    "MinimumPayment" : {
      "type" : "number",
      "description" : "The minimum payment set a percentage of balance, or a fixed cash amount.",
      "format" : "double"
    },
    "MinimumPaymentDueDate" : {
      "type" : "string",
      "description" : "Minimum Payment Due Date shown on your monthly statement to remain in good standing.",
      "javaType": "java.time.OffsetDateTime",
      "format" : "date-time"
    },
    "AccountInterestRate" : {
      "type" : "number",
      "description" : "The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal."
    },
    "OutstandingPrincipalAmount" : {
      "type" : "number",
      "description" : "This IS the value date balance of the product.",
      "format" : "double"
    },
    "AccountHolderName" : {
      "maxLength" : 256,
      "type" : "string",
      "description" : "Name of the Payer/Payee i.e. Owner of the Account"
    },
    "AccountOpeningDate" : {
      "type" : "string",
      "javaType": "java.time.OffsetDateTime",
      "format" : "date-time"
    },
    "AccruedInterest" : {
      "type" : "number",
      "description" : "The interest that is earned (credit interest) or due (debit interest) but not settled yet."
    },
    "OutstandingPayment" : {
      "type" : "number",
      "description" : "Outstanding payment refers to the outstanding [unpaid] balance, i.e., the current amount due."
    },
    "ValueDateBalance" : {
      "type" : "number",
      "description" : "The balance of the account on a specific date that needs to be used for the calculation of interest. NB! If no date is specified (like for the book date balance) the current date can be assumed."
    },
    "TermNumber" : {
      "type" : "number",
      "description" : "The number of times interest rate is paid on the settlement account."
    },
    "MaturityAmount" : {
      "type" : "number",
      "description" : "Amount payable at the end of a holding period of a product (maturity date). For deposit all of the interest is usualy paid at maturity date (IF the term is shorter then one year).",
      "format" : "double"
    },
    "MaturityDate" : {
      "type" : "string",
      "description" : "End term of a holding period.",
      "javaType": "java.time.OffsetDateTime",
      "format" : "date-time"
    },
    "LegalEntityReference" : {
      "title" : "Legal Entity Reference",
      "required" : [ "externalId", "internalId" ],
      "properties" : {
        "internalId" : {
          "$ref" : "#/schemas/InternalIdentifier"
        },
        "externalId" : {
          "$ref" : "#/schemas/ExternalIdentifier"
        }
      }
    },
    "EmailAddress" : {
      "title" : "The email addresses the user can be reached by.",
      "required" : [ "address", "key", "type" ],
      "type" : "object",
      "properties" : {
        "key" : {
          "maxLength" : 70,
          "minLength" : 1,
          "type" : "string",
          "description" : "Unique key identifying the email address."
        },
        "type" : {
          "maxLength" : 36,
          "minLength" : 1,
          "type" : "string",
          "description" : "Key identifying the type of electronic address, e.g. work or personal."
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Flag denoting whether this is the main electronic address."
        },
        "address" : {
          "maxLength" : 255,
          "minLength" : 1,
          "type" : "string",
          "description" : "Address."
        }
      }
    },
    "PhoneNumber" : {
      "required" : [ "key", "number", "type" ],
      "type" : "object",
      "properties" : {
        "key" : {
          "maxLength" : 70,
          "minLength" : 1,
          "type" : "string",
          "description" : "Unique key identifying the phone address."
        },
        "type" : {
          "maxLength" : 36,
          "minLength" : 1,
          "type" : "string",
          "description" : "Key identifying the type of phone number, e.g. mobile or land line."
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Flag denoting whether this is the main phone number."
        },
        "number" : {
          "maxLength" : 30,
          "minLength" : 1,
          "type" : "string",
          "description" : "Phone number."
        }
      }
    },
    "PostalAddress" : {
      "required" : [ "key", "type" ],
      "type" : "object",
      "properties" : {
        "key" : {
          "maxLength" : 70,
          "minLength" : 1,
          "type" : "string",
          "description" : "Unique key identifying the postal address."
        },
        "type" : {
          "maxLength" : 36,
          "minLength" : 1,
          "type" : "string",
          "description" : "Key identifying the type of postal address, e.g. residential, business, po-box, mail-to, delivery-to."
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Flag denoting whether this is the main postal address."
        },
        "department" : {
          "maxLength" : 70,
          "type" : "string",
          "description" : "Department."
        },
        "subDepartment" : {
          "maxLength" : 70,
          "type" : "string",
          "description" : "Sub Department."
        },
        "addressLine" : {
          "maxLength" : 70,
          "type" : "string",
          "description" : "Address Line."
        },
        "buildingNumber" : {
          "maxLength" : 255,
          "type" : "string",
          "description" : "Building number."
        },
        "streetName" : {
          "maxLength" : 255,
          "type" : "string",
          "description" : "Street."
        },
        "townName" : {
          "maxLength" : 35,
          "type" : "string",
          "description" : "Town."
        },
        "postalCode" : {
          "maxLength" : 16,
          "type" : "string",
          "description" : "Postcode."
        },
        "countrySubDivision" : {
          "maxLength" : 35,
          "type" : "string",
          "description" : "Country sub-division."
        },
        "country" : {
          "maxLength" : 3,
          "type" : "string",
          "description" : "Country code - ISO 3166."
        }
      }
    },
    "IdentityUserLinkStrategy" : {
      "title" : "Strategy to link user in Identity.",
      "type" : "string",
      "description" : "Identity User Creation Strategy to Create Users in Identity or Import Users from Identity.",
      "default" : "IDENTITY_AGNOSTIC",
      "enum" : [ "IMPORT_FROM_IDENTIY", "CREATE_IN_IDENTITY", "IDENTITY_AGNOSTIC" ]
    },
    "User" : {
      "title" : "User",
      "required" : [ "externalId", "fullName" ],
      "type" : "object",
      "properties" : {
        "internalId" : {
          "$ref" : "#/schemas/InternalIdentifier"
        },
        "externalId" : {
          "$ref" : "#/schemas/ExternalIdentifier"
        },
        "legalEntityId" : {
          "$ref" : "#/schemas/InternalIdentifier"
        },
        "emailAddress" : {
          "$ref" : "#/schemas/EmailAddress"
        },
        "mobileNumber" : {
          "$ref" : "#/schemas/PhoneNumber"
        },
        "fullName" : {
          "type" : "string"
        },
        "identityLinkStrategy" : {
          "$ref" : "#/schemas/IdentityUserLinkStrategy"
        },
        "userProfile" : {
          "$ref" : "#/schemas/UserProfile"
        },
        "locked" : {
          "type" : "boolean",
          "description" : "Identity status. If true identity will be locked."
        }
      },
      "description" : "User that accessses the system on behalf of the Legal Entity\nA User is a person who interacts with the bank and who uses Backbase applications on behalf of the legal entity they are representing.\n"
    },
    "Name" : {
      "title" : "Name",
      "type" : "object",
      "properties" : {
        "formatted" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "givenName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "honorificPrefix" : {
          "type" : "string"
        },
        "honorificSuffix" : {
          "type" : "string"
        }
      }
    },
    "Multivalued" : {
      "title" : "Multivalued",
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "primary" : {
          "type" : "boolean"
        }
      }
    },
    "UserProfile" : {
      "title" : "UserProfile",
      "required" : [ "externalId", "userId", "userName" ],
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "name" : {
          "$ref" : "#/schemas/Name"
        },
        "displayName" : {
          "type" : "string"
        },
        "nickName" : {
          "type" : "string"
        },
        "profileUrl" : {
          "type" : "string"
        },

        "title" : {
          "type" : "string"
        },
        "userType" : {
          "type" : "string"
        },
        "preferredLanguage" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        },
        "timezone" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "additionalEmails" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/schemas/Multivalued"
          }
        },
        "additionalPhoneNumbers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/schemas/Multivalued"
          }
        }
      },
      "description" : "User Data for User Profile Manager. Additional to Data included in User Model\n"
    }
  }
}