openapi: 3.0.3
info:
  title: Portfolio Ingestion API
  description: Ingestion Saga for Portfolio
  version: 0.0.1
  x-logo:
    url: "https://www.backbase.com/wp-content/uploads/2017/04/backbase-logo-png.png"
    backgroundColor: "#FFFFFF"
    altText: "Backbase logo"
servers:
  - url: https://portfolio-http.proto.backbasecloud.com/
    description: The server
tags:
- name: portfolios
  description: Portfolios API
paths:
  ###############################################
  ## Portfolio
  ###############################################
  /portfolios:
    post:
      tags:
        - portfolios
      summary: Create Wealth of Portfolios
      operationId: createPortfolios
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WealthBundle'
      responses:
        200:
          description: The created legal entity and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WealthBundle'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/regions/batch:
    post:
      tags:
        - portfolios
      summary: Create Portfolios Regions Batch
      operationId: createPortfioliosRegionsBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RegionBundle'
      responses:
        200:
          description: The created region and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegionBundle'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/asset-classes/batch:
    post:
      tags:
        - portfolios
      summary: Create Portfolios Asset Classes Batch
      operationId: createPortfioliosAssetClassesBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssetClassBundle'
      responses:
        200:
          description: The created asset classes and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetClassBundle'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/batch:
    post:
      tags:
        - portfolios
      summary: Create Portfolios Batch
      operationId: createPortfioliosBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: schemas/v1/portfolio.yaml
      responses:
        200:
          description: The created portfolios and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: schemas/v1/portfolio.yaml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/sub-portfolios/batch:
    post:
      tags:
        - portfolios
      summary: Create Sub Portfolios Batch
      operationId: createSubPortfioliosBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubPortfolioBundle'
      responses:
        200:
          description: The created sub portfolios and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubPortfolioBundle'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/allocations/batch:
    post:
      tags:
        - portfolios
      summary: Create Allocations Batch
      operationId: createAllocationsBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AllocationBundle'
      responses:
        200:
          description: The created Allocations and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllocationBundle'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/valuations/batch:
    post:
      tags:
        - portfolios
      summary: Create Valuations Batch
      operationId: createValuationsBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ValuationsBundle'
      responses:
        200:
          description: The created Valuations and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValuationsBundle'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/transaction-categories/batch:
    post:
      tags:
        - portfolios
      summary: Create Transaction Categories Batch
      operationId: createTransactionCategoriesBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: schemas/v1/transaction-category.yaml
      responses:
        200:
          description: The created Valuations and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: schemas/v1/transaction-category.yaml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/instruments/batch:
    post:
      tags:
        - portfolios
      summary: Create Instruments Batch
      operationId: createInstrumentsBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/InstrumentBundle'
      responses:
        200:
          description: The created Instruments and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstrumentBundle'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/hierarchies/batch:
    post:
      tags:
        - portfolios
      summary: Create Hierarchies Batch
      operationId: createHierarchiesBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HierarchyBundle'
      responses:
        200:
          description: The created Hierarchies and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HierarchyBundle'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /portfolios/positions/batch:
    post:
      tags:
        - portfolios
      summary: Create Positions Batch
      operationId: createPositionsBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: schemas/v1/position.yaml
      responses:
        200:
          description: The created Positions and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: schemas/v1/position.yaml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    RegionBundle:
      type: object
      properties:
        region:
          $ref: schemas/v1/region.yaml
        countries:
          type: array
          items:
            $ref: schemas/v1/country.yaml
    AssetClassBundle:
      type: object
      properties:
        assetClass:
          $ref: schemas/v1/asset-class.yaml
        subAssetClasses:
          type: array
          items:
            $ref: schemas/v1/sub-asset-class.yaml
    InstrumentBundle:
      type: object
      properties:
        instrument:
          $ref: schemas/v1/instrument.yaml
        history-prices:
          type: array
          items:
            $ref: schemas/v1/instrument-history-price.yaml
    PortfolioBundle:
      type: object
      properties:
        portfolio:
          $ref: schemas/v1/portfolio.yaml
        subPortfolios:
          type: array
          items:
            $ref: schemas/v1/sub-portfolio.yaml
        allocations:
          type: array
          items:
            $ref: schemas/v1/allocation.yaml
        hierarchies:
          type: array
          items:
            $ref: schemas/v1/portfolio-positions-hierarchy.yaml
        cumulative-performances:
          type: array
          items:
            $ref: schemas/v1/portfolio-cumulative-performances.yaml
        benchmark:
          $ref: schemas/v1/portfolio-benchmark.yaml
        valuations:
          type: array
          items:
            $ref: schemas/v1/portfolio-valuation.yaml
    SubPortfolioBundle:
      type: object
      properties:
        portfolioCode:
          type: string
          description: Unique identificator for a portfolio, used to identify portfolio at a bank or an investment firm.
        subPortfolios:
          type: array
          items:
            $ref: schemas/v1/sub-portfolio.yaml
    AllocationBundle:
      type: object
      properties:
        portfolioCode:
          type: string
          description: Unique identificator for a portfolio, used to identify portfolio at a bank or an investment firm.
        allocations:
          type: array
          items:
            $ref: schemas/v1/allocation.yaml
    ValuationsBundle:
      type: object
      properties:
        portfolioCode:
          type: string
          description: Unique identificator for a portfolio, used to identify portfolio at a bank or an investment firm.
        valuations:
          type: array
          items:
            $ref: schemas/v1/portfolio-valuation.yaml
    PositionBundle:
      type: object
      properties:
        portfolioId:
          type: string
          description: Unique identificator for a portfolio (Portfolio code)
        subPortfolioId:
          type: string
          description: Unique identificator for a sub-portfolio
        position:
          $ref: schemas/v1/position.yaml
        transaction-categories:
          type: array
          items:
            $ref: schemas/v1/transaction-category.yaml
        transactions:
          type: array
          items:
            $ref: schemas/v1/position-transaction.yaml
    HierarchyBundle:
      type: object
      properties:
        portfolioCode:
          type: string
          description: Unique identificator for a portfolio, used to identify portfolio at a bank or an investment firm.
        hierarchies:
          type: array
          items:
            $ref: schemas/v1/portfolio-positions-hierarchy.yaml
    PositionTransactionBundle:
      type: object
      properties:
        positionId:
          type: string
          description: Unique identificator for a position.
        transactions:
          type: array
          items:
            $ref: schemas/v1/position-transaction.yaml
    WealthBundle:
      type: object
      properties:
        regions:
          description: Region Bundle (regions and countries)
          type: array
          items:
            $ref: '#/components/schemas/RegionBundle'
        assetClasses:
          description: Asset Class Bundle (asset and sub-asset classes)
          type: array
          items:
            $ref: '#/components/schemas/AssetClassBundle'
        instruments:
          description: Instruments and Hstory Prices
          type: array
          items:
            $ref: '#/components/schemas/InstrumentBundle'
        portfolios:
          description: Portfolios and reference objects
          type: array
          items:
            $ref: '#/components/schemas/PortfolioBundle'
        positions:
          description: Portfolio Positions and Transactions
          type: array
          items:
            $ref: '#/components/schemas/PositionBundle'
        aggregate-portfolios:
          description: Aggregate Portfolios
          type: array
          items:
            $ref: schemas/v1/aggregate-portfolio.yaml
    WealthRegionsBundle:
      type: object
      properties:
        regions:
          description: Wealth Regions Bundle (regions and countries)
          type: array
          items:
            $ref: '#/components/schemas/RegionBundle'
    WealthAssetBundle:
      type: object
      properties:
        assetClasses:
          description: Asset Class Bundle (asset and sub-asset classes)
          type: array
          items:
            $ref: '#/components/schemas/AssetClassBundle'
    WealthPortfolioBundle:
      type: object
      properties:
        portfolios:
          description: Portfolios and reference objects
          type: array
          items:
            $ref: schemas/v1/portfolio.yaml
    WealthSubPortfolioBundle:
      type: object
      properties:
        batchSubPortfolios:
          description: Sub Portfolios and reference objects
          type: array
          items:
            $ref: '#/components/schemas/SubPortfolioBundle'
    WealthPortfolioAllocationsBundle:
      type: object
      properties:
        batchPortfolioAllocations:
          description: Allocations and reference objects
          type: array
          items:
            $ref: '#/components/schemas/AllocationBundle'
    WealthPortfolioValuationsBundle:
      type: object
      properties:
        batchPortfolioValuations:
          description: Valuations and reference objects
          type: array
          items:
            $ref: '#/components/schemas/ValuationsBundle'
    WealthTransactionCategoriesBundle:
      type: object
      properties:
        transaction-categories:
          description: Transaction categories
          type: array
          items:
            $ref: schemas/v1/transaction-category.yaml
    WealthInstrumentBundle:
      type: object
      properties:
        instruments:
          description: Instruments and reference objects
          type: array
          items:
            $ref: '#/components/schemas/InstrumentBundle'
    WealthPortfolioPositionHierarchyBundle:
      type: object
      properties:
        batchPortfolioPositionsHierarchies:
          description: Hierarchies and reference objects
          type: array
          items:
            $ref: '#/components/schemas/HierarchyBundle'
    WealthPositionsBundle:
      type: object
      properties:
        positions:
          description: Poitions and reference objects
          type: array
          items:
            $ref: schemas/v1/position.yaml
    Error:
      type: object
      properties:
        message:
          type: string
          description: Any further information
        errors:
          type: array
          description: Detailed error information
          items:
            type: object
            properties:
              message:
                type: string
                description: Default Message. Any further information.
              key:
                type: string
                description: '{capability-name}.api.{api-key-name}. For generated
                      validation errors this is the path in the document the error resolves
                      to. e.g. object name + ''.'' + field'
              context:
                type: object
                description: Context can be anything used to construct localised messages.
                x-java-type: java.util.Map<String,String>
            description: A validation error
