openapi: 3.0.1
info:
  title: Backbase Stream API
  version: 1.0.0
  x-logo:
    url: "http://www.backbase.com/wp-content/uploads/2017/04/backbase-logo-png.png"
    backgroundColor: "#FFFFFF"
    altText: "Backbase logo"
servers:
  - url: http://stream-product-catalog-http.proto.backbasecloud.com/
    description: The server
paths:
  ###############################################
  ## Product Catalog
  ###############################################
  /product-catalog:
    get:
      summary: Get Product Catalog
      operationId: getProductCatalog
      tags:
        - product-catalog
      description: Assemble Product Catalog
      responses:
        200:
          description: The created product type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCatalog'
        default:
          description: The
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Setup a Product Catalog
      tags:
        - product-catalog
      description: |
      operationId: setupProductCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCatalog'
      responses:
        200:
          description: The created product type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCatalog'
        default:
          description: The
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:


    ###############################################
    ## Product Catalog
    ###############################################
    ProductCatalog:
      type: object
      properties:
        productKinds:
          type: array
          items:
            $ref: '#/components/schemas/ProductKind'
        productTypes:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
        productStates:
          type: array
          items:
            $ref: '#/components/schemas/ProductState'
    ProductType:
      title: Product Type
      description: A Product Type can either have a predefined Backbase Product Kind or a custom product kind that must be created before.
      type: object
      properties:
        externalProductId:
          maxLength: 50
          minLength: 1
          type: string
          description: A unique identifier for the product
        externalProductKindId:
          maxLength: 50
          minLength: 1
          type: string
          description: The ID that is internally used to uniquely identify the kind of product
        productKindName:
          maxLength: 50
          minLength: 1
          type: string
          description: The label that is used for the respective product kind
        externalProductTypeId:
          type: string
          description: The ID that is used by the Bank to identify the Product
        productTypeName:
          type: string
          description: The name that is used by the bank to label a specific product type
        externalId:
          maxLength: 50
          type: string
          description: 'A unique identifier for the product that the arrangement applies
            to '
        externalTypeId:
          maxLength: 50
          type: string
          description: The ID that is used by the Bank to identify the specific Product type - External reference to the product Type.
        typeName:
          maxLength: 50
          type: string
          description: The label/name that is used to label a specific product type.
        productKind:
          $ref: '#/components/schemas/ProductKind'
        translations:
          type: array
          items:
            $ref: '#/components/schemas/TranslationItem'
    TranslationItem:
      title: Translation item
      type: object
      properties:
        locale:
          minLength: 1
          maxLength: 50
          description: Defines the translation natural language as specified in ISO 639-1, and territory two-letter form of ISO 3166
          type: string
        localeTranslations:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/LocaleTranslationItem'
    LocaleTranslationItem:
      title: Locale Translation item
      type: object
      properties:
        fieldName:
          type: string
          minLength: 1
          maxLength: 50
          description: Defines the name of the field that is translated
        fieldValue:
          type: string
          minLength: 1
          maxLength: 50
          description: Defines the translated value of the field

    ProductKind:
      title: Custom Product Kind
      description: |
        Product Type a Product is assigned to. This is used to group Products by kind (e.g. Current account, Savings account etc.)
        The CustomProductKind is mutually exclusive with the BackbaseProductKind
        Create a custom product kind for products that do not fit in the Backbase predefined product kinds
          * Current Account
          * Savings Account
          * Term Deposit
          * Debit Cards
          * Credit Cards
          * Loan
          * Investment Account
      type: object
      properties:
        externalKindId:
          $ref: '#/components/schemas/ExternalIdentifier'
        kindName:
          type: string
        kindUri:
          type: string
        translations:
          type: array
          items:
            $ref: '#/components/schemas/TranslationItem'
    BackbaseProductKind:
      type: string
      enum:
        - "Current Account"
        - "Credit Card"
        - "Debit Card"
        - "Loan"
        - "Savings Account"
        - "Investment Account"
        - "Term Deposit"
        - "Custom"

    ###############################################
    ## Products
    ###############################################
    BaseProduct:
      title: Base Product
      description: |
        The Base product holds all common properties between differnet product types
      type: object
      properties:
        externalId:
          minLength: 1
          maxLength: 50
          type: string
          description: A unique identifier for the product coming from the core banking system.
        productTypeExternalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        legalEntities:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntity'
        name:
          type: string
          maxLength: 50
          description: The name that can be assigned by the bank to label a product.
        externalTransferAllowed:
          type: boolean
          description: Defines if transfer to another party is allowed.
        crossCurrencyAllowed:
          type: boolean
          description: Defines if cross currency transfer is allowed
        bankAlias:
          maxLength: 50
          type: string
          description: The name that can be assigned by the bank to label the product.
        sourceId:
          maxLength: 11
          type: string
          description: Indicate if the account is regular or external
        externalParentId:
          maxLength: 50
          type: string
          description: Indicate if the account has parent child relationship with another account
        accountOpeningDate:
          type: string
          description: The date of activation of the account in the bank's system.
          format: 'date-time'
        lastUpdateDate:
          type: string
          format: 'date-time'
          description: Last date of balance (or other) parameter update for the particular product
        state:

          type: object
          properties:
            externalStateId:
              maxLength: 50
              type: string
              description: An external unique identifier for the product state object.
            state:
              maxLength: 50
              type: string
              description: Name that describes the specific product state.
    CurrentAccount:

      properties:
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
        creditLimit:
          $ref: '#/components/schemas/CreditLimit'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        BIC:
          $ref: '#/components/schemas/BIC'
        bankBranchCode:
          $ref: '#/components/schemas/BankBranchCode'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        creditLimitUsage:
          $ref: '#/components/schemas/CreditLimitUsage'
        creditLimitInterestRate:
          $ref: '#/components/schemas/CreditLimitInterestRate'
        creditLimitExpiryDate:
          $ref: '#/components/schemas/CreditLimitExpiryDate'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        debitCardsItems:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardItem'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        startDate:
          $ref: '#/components/schemas/StartDate'
        minimumRequiredBalance:
          $ref: '#/components/schemas/MinimumRequiredBalance'
        accountHolderAddressLine1:
          $ref: '#/components/schemas/AccountHolderAddressLine1'
        accountHolderAddressLine2:
          $ref: '#/components/schemas/AccountHolderAddressLine2'
        accountHolderStreetName:
          $ref: '#/components/schemas/AccountHolderStreetName'
        town:
          $ref: '#/components/schemas/Town'
        postCode:
          $ref: '#/components/schemas/PostCode'
        countrySubDivision:
          $ref: '#/components/schemas/CountrySubDivision'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        accountHolderCountry:
          $ref: '#/components/schemas/AccountHolderCountry'
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
    SavingsAccount:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        BIC:
          $ref: '#/components/schemas/BIC'
        bankBranchCode:
          $ref: '#/components/schemas/BankBranchCode'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        minimumRequiredBalance:
          $ref: '#/components/schemas/MinimumRequiredBalance'
        startDate:
          $ref: '#/components/schemas/StartDate'
        termUnit:
          $ref: '#/components/schemas/TermUnit'
        termNumber:
          $ref: '#/components/schemas/TermNumber'
        maturityDate:
          $ref: '#/components/schemas/MaturityDate'
        maturityAmount:
          $ref: '#/components/schemas/MaturityAmount'
        autoRenewalIndicator:
          $ref: '#/components/schemas/AutoRenewalIndicator'
        interestPaymentFrequencyUnit:
          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'
        interestPaymentFrequencyNumber:
          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        interestSettlementAccount:
          $ref: '#/components/schemas/InterestSettlementAccount'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        accountHolderAddressLine1:
          $ref: '#/components/schemas/AccountHolderAddressLine1'
        accountHolderAddressLine2:
          $ref: '#/components/schemas/AccountHolderAddressLine2'
        accountHolderStreetName:
          $ref: '#/components/schemas/AccountHolderStreetName'
        town:
          $ref: '#/components/schemas/Town'
        postCode:
          $ref: '#/components/schemas/PostCode'
        countrySubDivision:
          $ref: '#/components/schemas/CountrySubDivision'
        accountHolderCountry:
          $ref: '#/components/schemas/AccountHolderCountry'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
    DebitCard:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        number:
          maxLength: 36
          type: string
          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        cardNumber:
          $ref: '#/components/schemas/CardNumber'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        debitCardsItems:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardItem'
        startDate:
          $ref: '#/components/schemas/StartDate'
        validThru:
          $ref: '#/components/schemas/ValidThru'
    CreditCard:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
        creditLimit:
          $ref: '#/components/schemas/CreditLimit'
        number:
          maxLength: 36
          type: string
          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        cardNumber:
          $ref: '#/components/schemas/CardNumber'
        creditCardAccountNumber:
          $ref: '#/components/schemas/CreditCardAccountNumber'
        startDate:
          $ref: '#/components/schemas/StartDate'
        validThru:
          $ref: '#/components/schemas/ValidThru'
        applicableInterestRate:
          $ref: '#/components/schemas/ApplicableInterestRate'
        remainingCredit:
          $ref: '#/components/schemas/RemainingCredit'
        outstandingPayment:
          $ref: '#/components/schemas/OutstandingPayment'
        minimumPayment:
          $ref: '#/components/schemas/MinimumPayment'
        minimumPaymentDueDate:
          $ref: '#/components/schemas/MinimumPaymentDueDate'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        creditLimitUsage:
          $ref: '#/components/schemas/CreditLimitUsage'
        creditLimitInterestRate:
          $ref: '#/components/schemas/CreditLimitInterestRate'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
    Loan:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        productNumber:
          $ref: '#/components/schemas/ProductNumber'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        termUnit:
          $ref: '#/components/schemas/TermUnit'
        termNumber:
          $ref: '#/components/schemas/TermNumber'
        outstandingPrincipalAmount:
          $ref: '#/components/schemas/OutstandingPrincipalAmount'
        outstandingPayment:
          $ref: '#/components/schemas/OutstandingPayment'
        monthlyInstalmentAmount:
          $ref: '#/components/schemas/MonthlyInstalmentAmount'
        amountInArrear:
          $ref: '#/components/schemas/AmountInArrear'
        interestSettlementAccount:
          $ref: '#/components/schemas/InterestSettlementAccount'
        minimumPaymentDueDate:
          $ref: '#/components/schemas/MinimumPaymentDueDate'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        maturityDate:
          $ref: '#/components/schemas/MaturityDate'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        creditLimit:
          $ref: '#/components/schemas/CreditLimit'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
    TermDeposit:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        productNumber:
          $ref: '#/components/schemas/ProductNumber'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        startDate:
          $ref: '#/components/schemas/StartDate'
        termUnit:
          $ref: '#/components/schemas/TermUnit'
        termNumber:
          $ref: '#/components/schemas/TermNumber'
        maturityDate:
          $ref: '#/components/schemas/MaturityDate'
        maturityAmount:
          $ref: '#/components/schemas/MaturityAmount'
        autoRenewalIndicator:
          $ref: '#/components/schemas/AutoRenewalIndicator'
        interestPaymentFrequencyUnit:
          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'
        interestPaymentFrequencyNumber:
          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'
        interestSettlementAccount:
          $ref: '#/components/schemas/InterestSettlementAccount'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        outstandingPrincipalAmount:
          $ref: '#/components/schemas/OutstandingPrincipalAmount'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        minimumRequiredBalance:
          $ref: '#/components/schemas/MinimumRequiredBalance'
    InvestmentAccount:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        currentInvestment:
          $ref: '#/components/schemas/CurrentInvestment'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        productNumber:
          $ref: '#/components/schemas/ProductNumber'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
    CustomProduct:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
        - $ref: '#/components/schemas/CurrentAccount'
        - $ref: '#/components/schemas/DebitCard'
        - $ref: '#/components/schemas/CreditCard'
        - $ref: '#/components/schemas/Loan'
        - $ref: '#/components/schemas/TermDeposit'
        - $ref: '#/components/schemas/InvestmentAccount'
      properties:
        productTypeExternalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        startDate:
          $ref: '#/components/schemas/StartDate'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'

    DebitCardItem:
      type: object
      properties:
        number:
          maxLength: 36
          type: string
          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk
        expiryDate:
          maxLength: 32
          type: string
          description: Expiration date of a credit card, after which is no longer valid
          format: date-time
        cardId:
          maxLength: 32
          type: string
          description: External ID of the card
        cardholderName:
          maxLength: 64
          type: string
          description: First Name and Last Name of card holder.
        cardType:
          maxLength: 32
          type: string
          description: Card type to change card image based on it, ex. Maestro Gold
        cardStatus:
          maxLength: 32
          type: string
          description: Status of the card ex. Active, Expired etc

    ###############################################
    ## Legal Entity
    ###############################################
    LegalEntity:
      title: Legal Entity
      description: |
        A Legal Entity is any personal or non-personal entity that is involved in a transaction or an product with the bank. Both the bank and its customers are legal entities

        A Legal Entity:
        * Has one or more users that act on its behalf.
        * Owns one or more products.
        * A legal entity hierarchy is a collection of parent-child relationships. For example, within the same deployment, this allows you to:
        * Set up a holding structure for a corporate customer of the bank.
        * Set up a structure within the bank to support country and regional offices.
      type: object
      properties:
        name:
          type: string
        externalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        legalEntityType:
          $ref: '#/components/schemas/LegalEntityType'
        parentExternalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntity'
        limit:
          $ref: '#/components/schemas/Limit'
        currentAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CurrentAccount'
        savingAccounts:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccount'
        debitCards:
          type: array
          items:
            $ref: '#/components/schemas/DebitCard'
        creditCards:
          type: array
          items:
            $ref: '#/components/schemas/CreditCard'
        loans:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
        termDeposits:
          type: array
          items:
            $ref: '#/components/schemas/TermDeposit'
        investmentAccounts:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentAccount'
        customProducts:
          type: array
          items:
            $ref: '#/components/schemas/CustomProduct'
        admininistrators:
          type: array
          items:
            $ref: '#/components/schemas/User'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'

      required:
        - name
        - external
        - legalEntityType
        - administrators
    LegalEntityType:
      type: string
      title: Legal Entity Type
      description: Type of the legal entity. Bank or Customer.
      enum:
        - CUSTOMER
        - BANK
    User:
      title: User
      description: |
        User that accessses the system on behalf of the Legal Entity
        A User is a person who interacts with the bank and who uses Backbase applications on behalf of the legal entity they are representing.
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        legalEntityExternalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        limit:
          $ref: '#/components/schemas/Limit'
      required:
        - externalId
    Limit:
      title: Limit
      type: object
      properties:
        transactional:
          $ref: '#/components/schemas/TransactionalLimit'
        daily:
          $ref: '#/components/schemas/DailyLimit'
        weekly:
          $ref: '#/components/schemas/WeeklyLimit'
        monthly:
          $ref: '#/components/schemas/MonthlyLimit'
        quarterly:
          $ref: '#/components/schemas/QuarterlyLimit'
        yearly:
          $ref: '#/components/schemas/YearlyLimit'
    ServiceAgreement:
      title:  Service Agreement
      description: |
        The formal vehicle that allows users of one entity to access products of that or other entities
        A Service agreement is:
        - A contract that includes one or more legal entities. A legal entity that is participating in a service agreement can allow a subset of its users to act through that service agreement and/or allow a subset of its products to be accessed through the service agreement. Within each service agreement, permissions to perform specific tasks are granted to users, including access to products shared by one or more legal entities (participating in that service agreement). As such, a service agreement is a way to give third party users specific access to your products.
        - A special kind of service agreement is called the master service agreement. This service agreement has one legal entity participant and once configured, the participant cannot be changed. Important to know is that once the user is granted with administrative permissions (e.g. manage account groups), he or she has the power to execute the task in any service agreement lower in the hierarchy. For example, if the user of the bank is assigned with manage account groups permission in the master service agreement of the bank, the user can manage account groups in any service agreement lower in the hierarchy.
        - A service agreement may be restricted in time, by setting a time bound. Permissions granted to users in the time-restricted service agreement, are active and may be consumed, only while the time bound is valid.







    ###############################################
    ## Reusable Fields
    ###############################################
    ExternalIdentifier:
      title: External Identifier
      maxLength: 64
      minLength: 1
      pattern: ^[^\r\n]{1,64}$
      type: string
      description: External legal entity identifier.
    UrgentTransfer:
      type: boolean
      description: Defines if urgent transfer is allowed.
    ValidThru:
      type: string
      format: date
      description: Expiration date of a credit card, after which is no longer valid.
    ValueDateBalance:
      type: number
      description: The balance of the account on a specific date that needs to be used for the calculation of interest. NB! If no date is specified (like for the book date balance) the current date can be assumed.
    ProductNumber:
      maxLength: 36
      type: string
      description: The number identifying the contract.
    BBAN:
      maxLength: 50
      type: string
      description: Specifying the BBAN of the account.
    BIC:
      maxLength: 11
      type: string
      description: Bank Identifier Code - international bank code that identifies particular banks worldwide
    CardNumber:
      type: number
    CreditCardAccountNumber:
      maxLength: 32
      type: string
      description: The number of the account the credit card transactions settle on (so actually the reference to the settlement account of the card)?
    CreditLimitExpiryDate:
      type: string
      description: The date after which overdraft will no longer be available to the account (renewed automatically or cancelled).
    CreditLimitInterestRate:
      type: number
      description: Overdraft Interest is an interest applied to the account for any time throughout the month when the account is overdrawn.
    CreditLimitUsage:
      type: number
      description: Monetary amount of the used overdraft.
    CrossCurrency:
      type: boolean
      description: Defines if cross currency transfer is allowed
    AccountHolderAddressLine1:
      maxLength: 70
      type: string
      description: Address of the Payer/Payee - Alternate address line for the account.
    AccountHolderAddressLine2:
      maxLength: 70
      type: string
      description: Address of the Payer/Payee - Alternate address line for the account.
    AccountHolderCountry:
      pattern: ^[A-Z]{2}$
      type: string
      description: Country of the account holder
    AccountHolderName:
      maxLength: 256
      type: string
      description: Name of the Payer/Payee i.e. Owner of the Account
    AccountHolderStreetName:
      maxLength: 70
      type: string
      description: Street name of the Payer/Payee - Alternate street name for the account.
    AccountInterestRate:
      type: number
      description: The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal.
    AccountOpeningDate:
      type: string
    AccruedInterest:
      description: The interest that is earned (credit interest) or due (debit interest) but not settled yet.
      type: number
    AmountInArrear:
      type: number
      description: The part of a debt that is overdue after missing one or more required payments. The amount of the arrears is the amount accrued from the date on which the first missed payment was due.
    ApplicableInterestRate:
      type: number
      description: The interest rate or rates which would be used for a particular product.
    AutoRenewalIndicator:
      type: boolean
      description: Indicates whether or not an product is to be continued after maturity automatically. Usually the product is renewed using the same principal and term unless renegotiation has taken place prior to expiration.
    RemainingCredit:
      type: number
      description: Amount of money the user is available to use from the Credit limit of the account
    OutstandingPayment:
      type: number
      description: Outstanding payment refers to the outstanding [unpaid] balance, i.e., the current amount due.
    OutstandingPrincipalAmount:
      type: number
      description: This IS the value date balance of the product.
    MaturityAmount:
      type: number
      description: Amount payable at the end of a holding period of a product (maturity date). For deposit all of the interest is usualy paid at maturity date (IF the term is shorter then one year).
    MaturityDate:
      type: string
      description: End term of a holding period.
    MinimumPayment:
      type: number
      description: The minimum payment set a percentage of balance, or a fixed cash amount.
    MinimumPaymentDueDate:
      type: string
      description: Minimum Payment Due Date shown on your monthly statement to remain in good standing.
    MinimumRequiredBalance:
      type: number
      description: Minimum amount that a customer must have in an account in order to receive some sort of service, such as keeping the account open or receive interest.
    MonthlyInstalmentAmount:
      type: number
      description: A fixed payment amount paid by a borrower to the bank at a specified date each calendar month.
    TermNumber:
      type: number
      description: The number of times interest rate is paid on the settlement account.
    TermUnit:
      type: string
      description: The period of time and/or the interest rate arranged between Bank and customer.
      enum:
        - "Daily"
        - "Weekly"
        - "Monthly"
        - "Quarterly"
        - "Yearly"
    Town:
      maxLength: 35
      type: string
      description: Town of the Payer/Payee - Alternate town for the account.
    InterestSettlementAccount:
      maxLength: 32
      type: string
      description: Account that provides quick access to accumulated cash to facilitate daily settlements with other businesses.
    CreditAccount:
      type: boolean
      description: Indicator whether or not the product can be used in payment orders as credit account.
    DebitAccount:
      type: boolean
      description: Indicator whether or not the product can be used in payment orders as debit account.
    IBAN:
      maxLength: 34
      pattern: ^(AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW).*
      type: string
      description: Specifying the IBAN of the account.
    BankBranchCode:
      maxLength: 20
      type: string
      description: (This is to accomodate additional country specific fields like Sort Code in UK)
    StartDate:
      type: string
      format: 'date-time'
    PostCode:
      maxLength: 16
      type: string
      description: Post Code of the Payer/Payee
    CountrySubDivision:
      maxLength: 35
      type: string
      description: Country SubDivision of the Payer/Payee
    InterestPaymentFrequencyNumber:
      type: number
      description: Number of times per year when the accumulated interest is settled to the account on a regular basis. The frequency could be yearly, half-yearly, quarterly, monthly, weekly, daily (or not at all, until maturity)
    InterestPaymentFrequencyUnit:
      type: string
      description: The period of time and/or the interest rate arranged between Bank and customer.
      enum:
        - "Daily"
        - "Weekly"
        - "Monthly"
        - "Quarterly"
        - "Yearly"
    CurrencyCode:
      pattern: ^[A-Z]{3}$
      type: string
      description: The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount
    BookedBalance:
      type: object
      description: "Booked Balance"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    AvailableBalance:
      type: object
      description: "Available Balance"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    CreditLimit:
      type: object
      description: "Credit Limit"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    PrincipalAmount:
      type: object
      description: "The amount that was (originally) contracted for the respective product. This is mainly used in the context of loans and deposits."
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    CurrentInvestment:
      type: object
      description: The total current value of all the securities kept in the account.
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    TransactionalLimit:
      type: object
      description: "Transactional Limit"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    DailyLimit:
      type: object
      description: "Daily Limit"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    WeeklyLimit:
      type: object
      description: "Weekly Limit"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    MonthlyLimit:
      type: object
      description: "Monthly Limit"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    QuarterlyLimit:
      type: object
      description: "Quarterly Limit"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    YearlyLimit:
      type: object
      description: "Yearly Limit"
      properties:
        amount:
          type: string
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'

    ProductState:
      type: object
      properties:
        externalStateId:
          maxLength: 50
          type: string
          description: An external unique identifier for the product state object.
        state:
          maxLength: 50
          type: string
          description: Name that describes the specific product state.

    ###############################################
    ## Genenric Schemas
    ###############################################
    Error:
      type: object
      properties:
        message:
          type: string
          description: Any further information
        errors:
          type: array
          description: Detailed error information
          items:
            type: object
            properties:
              message:
                type: string
                description: Default Message. Any further information.
              key:
                type: string
                description: '{capability-name}.api.{api-key-name}. For generated
                  validation errors this is the path in the document the error resolves
                  to. e.g. object name + ''.'' + field'
              context:
                type: object
                description: Context can be anything used to construct localised messages.
                x-java-type: java.util.Map<String,String>
            description: A validation error
