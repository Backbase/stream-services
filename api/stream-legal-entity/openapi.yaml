openapi: 3.0.1
info:
  title: Ingest Legal Entity API
  description: Ingestion Saga for Legal Entities and their products
  version: 2.3.0
  x-logo:
    url: "http://www.backbase.com/wp-content/uploads/2017/04/backbase-logo-png.png"
    backgroundColor: "#FFFFFF"
    altText: "Backbase logo"
servers:
  - url: http://legal-entity-http.proto.backbasecloud.com/
    description: The server
paths:
  ###############################################
  ## Legal Entity
  ###############################################
  /legal-entity:
    post:
      tags:
        - legal-entity
      summary: Create Legal Entity
      description: Create a new Legal Entity and their supporting objects from Legal Entity
      operationId: createLegalEntity
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LegalEntity'
            examples:
              rootLegalEntityHierarchyExample:
                $ref: '#/components/examples/RootLegalEntityHierarchyExample'
              rootLegalEntityForMambu:
                $ref: '#/components/examples/RootLegalEntityForMambu'
              rootLegalEntityHierarchyWithArrangements:
                $ref: '#/components/examples/RootLegalEntityHierarchyWithArrangements'
              legalEntitiesForMockBack:
                $ref: '#/components/examples/LegalEntitiesForMockBack'
      responses:
        200:
          description: The created legal entity and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalEntity'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service-agreement:
    put:
      tags:
        - service-agreement
      summary: Update Service Agreement
      description: Update a service agreement
      operationId: updateServiceAgreement
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdatedServiceAgreement'
            examples:
              updateCustomServiceAgreement:
                $ref: '#/components/examples/CustomServiceAgreement'
      responses:
        200:
          description: Service Agreement successfully updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdatedServiceAgreement'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /async/legal-entity:
    post:
      tags:
        - legal-entity
      summary: Process Legal Entity
      description: Asynchronously create new Legal Entties and their supporting objects from Legal Entity
      operationId: processLegalEntitiesAsync
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LegalEntity'
            examples:
              rootLegalEntityHierarchyExample:
                $ref: '#/components/examples/RootLegalEntityHierarchyExample'
              rootLegalEntityForMambu:
                $ref: '#/components/examples/RootLegalEntityForMambu'
              rootLegalEntityHierarchyWithArrangements:
                $ref: '#/components/examples/RootLegalEntityHierarchyWithArrangements'
              legalEntitiesForMockBack:
                $ref: '#/components/examples/LegalEntitiesForMockBack'
      responses:
        202:
          description: The created legal entity and all their objects with internal ids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalEntityResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /async/service-agreement:
    put:
      tags:
        - service-agreement
      summary: Process Service Agreement
      description: Asynchronously update a service agreement
      operationId: updateServiceAgreementAsync
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdatedServiceAgreement'
            examples:
              updateCustomServiceAgreement:
                $ref: '#/components/examples/CustomServiceAgreement'
      responses:
        200:
          description: Service Agreement successfully updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdatedServiceAgreementResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /async/legal-entity/{unitOfWorkId}:
    get:
      tags:
        - legal-entity
      summary: Process Legal Entity
      description: Asynchronously create new Legal Entties and their supporting objects from Legal Entity
      operationId: getUnitOfWork
      parameters:
        - name: unitOfWorkId
          in: path
          description: ID of Work Unit
          required: true
          schema:
            type: string
      responses:
        200:
          description: The created legal entity and all their objects with internal ids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntityResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /async/service-agreement/{unitOfWorkId}:
    get:
      tags:
        - service-agreement
      summary: Process Service Agreement
      description: Asynchronously update a Service Agreement and their supporting objects
      operationId: getUpdateServiceAgreementUnitOfWork
      parameters:
        - name: unitOfWorkId
          in: path
          description: ID of Work Unit
          required: true
          schema:
            type: string
      responses:
        200:
          description: The Service Agreement update job status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedServiceAgreementResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    ###############################################
    ## Products
    ###############################################
    ProductGroup:
      type: object
      description: "Products assigned to service agreement"
      allOf:
        - $ref: '#/components/schemas/BaseProductGroup'
      properties:
        serviceAgreement:
          $ref: '#/components/schemas/ServiceAgreement'
        assignedPermissions:
          type: array
          items:
            $ref: '#/components/schemas/AssignedPermission'

    BatchProductGroup:
      type: object
      description: "Product groups assigned to the users within same legal entity"
      properties:
        serviceAgreement:
          $ref: '#/components/schemas/ServiceAgreement'
        productGroups:
          type: array
          items:
            $ref: '#/components/schemas/BaseProductGroup'

    BaseProductGroup:
      type: object
      description: "Product groups assigned to the users within same legal entity"
      properties:
        internalId:
          $ref: '#/components/schemas/InternalIdentifier'
        productGroupType:
          type: string
          default: ARRANGEMENTS
          enum:
            - ARRANGEMENTS
            - JOURNEYS
            - REPOSITORIES
        name:
          maxLength: 128
          minLength: 1
          pattern: ^\S(.*(\S))?$
          type: string
          description: Product group name
        description:
          maxLength: 255
          minLength: 1
          pattern: ^\S(.*(\S))?$
          type: string
          description: Product group description
        users:
          type: array
          items:
            $ref: '#/components/schemas/JobProfileUser'
        currentAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CurrentAccount'
        savingAccounts:
          type: array
          items:
            $ref: '#/components/schemas/SavingsAccount'
        debitCards:
          type: array
          items:
            $ref: '#/components/schemas/DebitCard'
        creditCards:
          type: array
          items:
            $ref: '#/components/schemas/CreditCard'
        loans:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
        termDeposits:
          type: array
          items:
            $ref: '#/components/schemas/TermDeposit'
        investmentAccounts:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentAccount'
        customProducts:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        customDataGroupItems:
          type: array
          items:
            $ref: '#/components/schemas/CustomDataGroupItem'

    BaseProduct:
      title: Base Product
      description: |
        The Base product holds all common properties between different product types
      type: object
      properties:
        internalId:
          $ref: '#/components/schemas/InternalIdentifier'
        externalId:
          minLength: 1
          maxLength: 50
          type: string
          description: A unique identifier for the product coming from the core banking system.
        productTypeExternalId:
          title: External ID of the Product Type as setup in Product Summary
          maxLength: 64
          minLength: 1
          pattern: ^[^\r\n]{1,64}$
          type: string
        legalEntities:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityReference'
        name:
          type: string
          maxLength: 50
          description: The name that can be assigned by the bank to label a product.
        externalTransferAllowed:
          type: boolean
          description: Defines if transfer to another party is allowed.
        crossCurrencyAllowed:
          type: boolean
          description: Defines if cross currency transfer is allowed
        bankAlias:
          maxLength: 50
          type: string
          description: The name that can be assigned by the bank to label the product.
        sourceId:
          maxLength: 11
          type: string
          description: Indicate if the account is regular or external
        accountOpeningDate:
          type: string
          description: The date of activation of the account in the bank's system.
          format: 'date-time'
        lastUpdateDate:
          type: string
          format: 'date-time'
          description: Last date of balance (or other) parameter update for the particular product
        externalParentId:
          maxLength: 50
          type: string
          description: Indicate if the account has parent child relationship with another account
        state:
          type: object
          properties:
            externalStateId:
              maxLength: 50
              type: string
              description: An external unique identifier for the product state object.
            state:
              maxLength: 50
              type: string
              description: Name that describes the specific product state.
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        usersPreferences:
          type: array
          items:
            $ref: '#/components/schemas/UserPreferences'
        additions:
          type: object
          additionalProperties:
            type: string
    CurrentAccount:
      properties:
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
        creditLimit:
          $ref: '#/components/schemas/CreditLimit'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        BIC:
          $ref: '#/components/schemas/BIC'
        bankBranchCode:
          $ref: '#/components/schemas/BankBranchCode'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        creditLimitUsage:
          $ref: '#/components/schemas/CreditLimitUsage'
        creditLimitInterestRate:
          $ref: '#/components/schemas/CreditLimitInterestRate'
        creditLimitExpiryDate:
          $ref: '#/components/schemas/CreditLimitExpiryDate'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        debitCardsItems:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardItem'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        startDate:
          $ref: '#/components/schemas/StartDate'
        minimumRequiredBalance:
          $ref: '#/components/schemas/MinimumRequiredBalance'
        accountHolderAddressLine1:
          $ref: '#/components/schemas/AccountHolderAddressLine1'
        accountHolderAddressLine2:
          $ref: '#/components/schemas/AccountHolderAddressLine2'
        accountHolderStreetName:
          $ref: '#/components/schemas/AccountHolderStreetName'
        town:
          $ref: '#/components/schemas/Town'
        postCode:
          $ref: '#/components/schemas/PostCode'
        countrySubDivision:
          $ref: '#/components/schemas/CountrySubDivision'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        accountHolderCountry:
          $ref: '#/components/schemas/AccountHolderCountry'
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
    SavingsAccount:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        debitCardsItems:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardItem'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        BIC:
          $ref: '#/components/schemas/BIC'
        bankBranchCode:
          $ref: '#/components/schemas/BankBranchCode'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        minimumRequiredBalance:
          $ref: '#/components/schemas/MinimumRequiredBalance'
        startDate:
          $ref: '#/components/schemas/StartDate'
        termUnit:
          $ref: '#/components/schemas/TermUnit'
        termNumber:
          $ref: '#/components/schemas/TermNumber'
        maturityDate:
          $ref: '#/components/schemas/MaturityDate'
        maturityAmount:
          $ref: '#/components/schemas/MaturityAmount'
        autoRenewalIndicator:
          $ref: '#/components/schemas/AutoRenewalIndicator'
        interestPaymentFrequencyUnit:
          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'
        interestPaymentFrequencyNumber:
          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        interestSettlementAccount:
          $ref: '#/components/schemas/InterestSettlementAccount'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        accountHolderAddressLine1:
          $ref: '#/components/schemas/AccountHolderAddressLine1'
        accountHolderAddressLine2:
          $ref: '#/components/schemas/AccountHolderAddressLine2'
        accountHolderStreetName:
          $ref: '#/components/schemas/AccountHolderStreetName'
        town:
          $ref: '#/components/schemas/Town'
        postCode:
          $ref: '#/components/schemas/PostCode'
        countrySubDivision:
          $ref: '#/components/schemas/CountrySubDivision'
        accountHolderCountry:
          $ref: '#/components/schemas/AccountHolderCountry'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
    DebitCard:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        number:
          maxLength: 36
          type: string
          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        cardNumber:
          $ref: '#/components/schemas/CardNumber'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        debitCardsItems:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardItem'
        startDate:
          $ref: '#/components/schemas/StartDate'
        validThru:
          $ref: '#/components/schemas/ValidThru'
    CreditCard:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
        BBAN:
          $ref: '#/components/schemas/BBAN'
        creditLimit:
          $ref: '#/components/schemas/CreditLimit'
        number:
          maxLength: 36
          type: string
          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        cardNumber:
          $ref: '#/components/schemas/CardNumber'
        creditCardAccountNumber:
          $ref: '#/components/schemas/CreditCardAccountNumber'
        validThru:
          $ref: '#/components/schemas/ValidThru'
        startDate:
          $ref: '#/components/schemas/StartDate'
        applicableInterestRate:
          $ref: '#/components/schemas/ApplicableInterestRate'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        remainingCredit:
          $ref: '#/components/schemas/RemainingCredit'
        outstandingPayment:
          $ref: '#/components/schemas/OutstandingPayment'
        minimumPayment:
          $ref: '#/components/schemas/MinimumPayment'
        minimumPaymentDueDate:
          $ref: '#/components/schemas/MinimumPaymentDueDate'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        creditLimitUsage:
          $ref: '#/components/schemas/CreditLimitUsage'
        creditLimitInterestRate:
          $ref: '#/components/schemas/CreditLimitInterestRate'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        bankBranchCode:
          $ref: '#/components/schemas/BankBranchCode'
        cardDetails:
          $ref: '#/components/schemas/CardDetailsItem'
    Loan:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        productNumber:
          $ref: '#/components/schemas/ProductNumber'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        termUnit:
          $ref: '#/components/schemas/TermUnit'
        termNumber:
          $ref: '#/components/schemas/TermNumber'
        outstandingPrincipalAmount:
          $ref: '#/components/schemas/OutstandingPrincipalAmount'
        outstandingPayment:
          $ref: '#/components/schemas/OutstandingPayment'
        monthlyInstalmentAmount:
          $ref: '#/components/schemas/MonthlyInstalmentAmount'
        amountInArrear:
          $ref: '#/components/schemas/AmountInArrear'
        interestSettlementAccount:
          $ref: '#/components/schemas/InterestSettlementAccount'
        minimumPayment:
          $ref: '#/components/schemas/MinimumPayment'
        minimumPaymentDueDate:
          $ref: '#/components/schemas/MinimumPaymentDueDate'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        maturityDate:
          $ref: '#/components/schemas/MaturityDate'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        creditLimit:
          $ref: '#/components/schemas/CreditLimit'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
        bankBranchCode:
          $ref: '#/components/schemas/BankBranchCode'
    TermDeposit:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        productNumber:
          $ref: '#/components/schemas/ProductNumber'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        startDate:
          $ref: '#/components/schemas/StartDate'
        termUnit:
          $ref: '#/components/schemas/TermUnit'
        termNumber:
          $ref: '#/components/schemas/TermNumber'
        maturityDate:
          $ref: '#/components/schemas/MaturityDate'
        maturityAmount:
          $ref: '#/components/schemas/MaturityAmount'
        autoRenewalIndicator:
          $ref: '#/components/schemas/AutoRenewalIndicator'
        interestPaymentFrequencyUnit:
          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'
        interestPaymentFrequencyNumber:
          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'
        interestSettlementAccount:
          $ref: '#/components/schemas/InterestSettlementAccount'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        outstandingPrincipalAmount:
          $ref: '#/components/schemas/OutstandingPrincipalAmount'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        minimumRequiredBalance:
          $ref: '#/components/schemas/MinimumRequiredBalance'
    InvestmentAccount:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        currentInvestment:
          $ref: '#/components/schemas/CurrentInvestment'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        productNumber:
          $ref: '#/components/schemas/ProductNumber'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
    Product:
      allOf:
        - $ref: '#/components/schemas/BaseProduct'
      properties:
        ### Current Account Fields
        bookedBalance:
          $ref: '#/components/schemas/BookedBalance'
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
        creditLimit:
          $ref: '#/components/schemas/CreditLimit'
        IBAN:
          $ref: '#/components/schemas/IBAN'
        BBAN:
          $ref: '#/components/schemas/BBAN'
        urgentTransferAllowed:
          $ref: '#/components/schemas/UrgentTransfer'
        BIC:
          $ref: '#/components/schemas/BIC'
        bankBranchCode:
          $ref: '#/components/schemas/BankBranchCode'
        accountInterestRate:
          $ref: '#/components/schemas/AccountInterestRate'
        valueDateBalance:
          $ref: '#/components/schemas/ValueDateBalance'
        creditLimitUsage:
          $ref: '#/components/schemas/CreditLimitUsage'
        creditLimitInterestRate:
          $ref: '#/components/schemas/CreditLimitInterestRate'
        creditLimitExpiryDate:
          $ref: '#/components/schemas/CreditLimitExpiryDate'
        accruedInterest:
          $ref: '#/components/schemas/AccruedInterest'
        debitCardsItems:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardItem'
        accountHolderName:
          $ref: '#/components/schemas/AccountHolderName'
        startDate:
          $ref: '#/components/schemas/StartDate'
        minimumRequiredBalance:
          $ref: '#/components/schemas/MinimumRequiredBalance'
        accountHolderAddressLine1:
          $ref: '#/components/schemas/AccountHolderAddressLine1'
        accountHolderAddressLine2:
          $ref: '#/components/schemas/AccountHolderAddressLine2'
        accountHolderStreetName:
          $ref: '#/components/schemas/AccountHolderStreetName'
        town:
          $ref: '#/components/schemas/Town'
        postCode:
          $ref: '#/components/schemas/PostCode'
        countrySubDivision:
          $ref: '#/components/schemas/CountrySubDivision'
        creditAccount:
          $ref: '#/components/schemas/CreditAccount'
        debitAccount:
          $ref: '#/components/schemas/DebitAccount'
        accountHolderCountry:
          $ref: '#/components/schemas/AccountHolderCountry'
        # Saving Accounts Fields
        termUnit:
          $ref: '#/components/schemas/TermUnit'
        termNumber:
          $ref: '#/components/schemas/TermNumber'
        maturityDate:
          $ref: '#/components/schemas/MaturityDate'
        maturityAmount:
          $ref: '#/components/schemas/MaturityAmount'
        autoRenewalIndicator:
          $ref: '#/components/schemas/AutoRenewalIndicator'
        interestPaymentFrequencyUnit:
          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'
        interestPaymentFrequencyNumber:
          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'
        principalAmount:
          $ref: '#/components/schemas/PrincipalAmount'
        interestSettlementAccount:
          $ref: '#/components/schemas/InterestSettlementAccount'
        # Debit Cards
        number:
          maxLength: 36
          type: string
          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.
        cardNumber:
          $ref: '#/components/schemas/CardNumber'
        validThru:
          $ref: '#/components/schemas/ValidThru'

        # Credit Cards Fields
        creditCardAccountNumber:
          $ref: '#/components/schemas/CreditCardAccountNumber'
        applicableInterestRate:
          $ref: '#/components/schemas/ApplicableInterestRate'
        remainingCredit:
          $ref: '#/components/schemas/RemainingCredit'
        outstandingPayment:
          $ref: '#/components/schemas/OutstandingPayment'
        minimumPayment:
          $ref: '#/components/schemas/MinimumPayment'
        minimumPaymentDueDate:
          $ref: '#/components/schemas/MinimumPaymentDueDate'

        # Loans
        productNumber:
          $ref: '#/components/schemas/ProductNumber'
        outstandingPrincipalAmount:
          $ref: '#/components/schemas/OutstandingPrincipalAmount'
        monthlyInstalmentAmount:
          $ref: '#/components/schemas/MonthlyInstalmentAmount'
        amountInArrear:
          $ref: '#/components/schemas/AmountInArrear'
    DebitCardItem:
      type: object
      properties:
        number:
          maxLength: 36
          type: string
          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk
        expiryDate:
          maxLength: 32
          type: string
          description: Expiration date of a credit card, after which is no longer valid
        cardId:
          maxLength: 32
          type: string
          description: External ID of the card
        cardholderName:
          maxLength: 64
          type: string
          description: First Name and Last Name of card holder.
        cardType:
          maxLength: 32
          type: string
          description: Card type to change card image based on it, ex. Maestro Gold
        cardStatus:
          maxLength: 32
          type: string
          description: Status of the card ex. Active, Expired etc
    CardDetailsItem:
      required:
        - cardProvider
      type: object
      properties:
        cardProvider:
          maxLength: 40
          type: string
          description: |
            This field specifies the Card Provider associated with the Account.
            Example: Maestro, Visa, Master Card, American Express or Discover.
        secured:
          type: boolean
          description: |
            A card can either be Secured or Unsecured.

            * true: amount deposited in the CC determines the Limit.
            * false: credit limit is based off various factors including the CC holder’s Credit Score, Credit History and is determined by the lending bank.
        availableCashCredit:
          type: number
          format: double
          description: |
            The amount of money currently available for a bank cash advance.

            This is calculated given the portion of the CashCreditLimit which has been used for Cash Advance Transactions.
        cashCreditLimit:
          type: number
          format: double
          description: The portion of the credit limit available for bank cash advance transactions..
        lastPaymentDate:
          type: string
          format: date
          description: The Date the last payment was made on the Credit-based arrangement
        lastPaymentAmount:
          type: number
          format: double
          description: The amount of the last payment that was made on the Credit-based arrangement.
        latePaymentFee:
          type: string
          pattern: /^\d+(\.\d+)?%?$/
          description: |
            The charge triggered by infractions such as late credit card payments. It can be expressed as fixed amount or as percent.

            Example:
              * 12.32: as fixed amount
              * 3.14%: as percent
        previousStatementDate:
          type: string
          format: date
          description: The date of the previous billing cycle for the arrangement.
        previousStatementBalance:
          type: number
          format: double
          description: The amount owed on the credit card as of the previous billing cycle.
        statementBalance:
          type: number
          format: double
          description: The amount owed on the credit card as of the latest billing cycle.

    LegalEntityReference:
      title: Legal Entity Reference
      properties:
        internalId:
          $ref: '#/components/schemas/InternalIdentifier'
        externalId:
          $ref: '#/components/schemas/ExternalIdentifier'
      required:
        - internalId
        - externalId
    LegalEntity:
      title: Legal Entity
      description: |
        A Legal Entity is any personal or non-personal entity that is involved in a transaction or an product with the bank. Both the bank and its customers are legal entities

        A Legal Entity:
        * Has one or more users that act on its behalf.
        * Owns one or more products.
        * A legal entity hierarchy is a collection of parent-child relationships. For example, within the same deployment, this allows you to:
        * Set up a holding structure for a corporate customer of the bank.
        * Set up a structure within the bank to support country and regional offices.
      type: object
      properties:
        name:
          type: string
        activateSingleServiceAgreement:
          type: boolean
        internalId:
          $ref: '#/components/schemas/InternalIdentifier'
        externalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        legalEntityType:
          $ref: '#/components/schemas/LegalEntityType'
        realmName:
          type: string
          description: Realm to which the Legal Entity should be mapped.
        parentExternalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        parentInternalId:
          $ref: '#/components/schemas/InternalIdentifier'
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntity'
        productGroups:
          type: array
          items:
            $ref: "#/components/schemas/ProductGroup"
        limit:
          $ref: '#/components/schemas/Limit'
        users:
          type: array
          items:
            $ref: '#/components/schemas/JobProfileUser'
        referenceJobRoles:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceJobRole'
        administrators:
          type: array
          items:
            $ref: '#/components/schemas/User'
        masterServiceAgreement:
          $ref: '#/components/schemas/ServiceAgreement'
        customServiceAgreement:
          $ref: '#/components/schemas/ServiceAgreement'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ExternalContact'
        additions:
          type: object
          additionalProperties:
            type: string
      required:
        - name
        - external
        - legalEntityType
        - administrators
        - jobProfile
    JobProfileUser:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        legalEntityReference:
          $ref: '#/components/schemas/LegalEntityReference'
        referenceJobRoleNames:
          type: array
          items:
            type: string
        businessFunctionGroups:
          type: array
          description: Business Function Groups
          items:
            $ref: '#/components/schemas/BusinessFunctionGroup'
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ExternalContact'
      required:
        - user
    LegalEntityType:
      type: string
      title: Legal Entity Type
      description: Type of the legal entity. Bank or Customer.
      enum:
        - CUSTOMER
        - BANK

    IdentityUserLinkStrategy:
      type: string
      title: Strategy to link user in Identity.
      description: Identity User Creation Strategy to Create Users in Identity or Import Users from Identity.
      default: IDENTITY_AGNOSTIC
      enum:
        - IMPORT_FROM_IDENTIY
        - CREATE_IN_IDENTITY
        - IDENTITY_AGNOSTIC

    User:
      title: User
      description: |
        User that accessses the system on behalf of the Legal Entity
        A User is a person who interacts with the bank and who uses Backbase applications on behalf of the legal entity they are representing.
      type: object
      properties:
        internalId:
          $ref: '#/components/schemas/InternalIdentifier'
        externalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        legalEntityId:
          $ref: '#/components/schemas/InternalIdentifier'
        emailAddress:
          $ref: '#/components/schemas/EmailAddress'
        mobileNumber:
          $ref: '#/components/schemas/PhoneNumber'
        fullName:
          type: string
        supportsLimit:
          type: boolean
        limit:
          $ref: '#/components/schemas/Limit'
        additions:
          type: object
          additionalProperties:
            type: string
        attributes:
          type: object
          description: Custom attributes to be added to the user.
          additionalProperties:
            type: string
        identityLinkStrategy:
          $ref: '#/components/schemas/IdentityUserLinkStrategy'
        userProfile:
          $ref: '#/components/schemas/UserProfile'
        locked:
          type: boolean
          description: Identity status. If true identity will be locked.
        additionalRealmRoles:
          type: array
          items:
            type: String
      required:
        - externalId
        - fullName
    EmailAddress:
      title: "The email addresses the user can be reached by."
      required:
        - address
        - key
        - type
      type: object
      properties:
        key:
          maxLength: 70
          minLength: 1
          type: string
          description: Unique key identifying the email address.
        type:
          maxLength: 36
          minLength: 1
          type: string
          description: Key identifying the type of electronic address, e.g. work or personal.
        primary:
          type: boolean
          description: Flag denoting whether this is the main electronic address.
        address:
          maxLength: 255
          minLength: 1
          type: string
          description: Address.
    PhoneNumber:
      required:
        - key
        - number
        - type
      type: object
      properties:
        key:
          maxLength: 70
          minLength: 1
          type: string
          description: Unique key identifying the phone address.
        type:
          maxLength: 36
          minLength: 1
          type: string
          description: Key identifying the type of phone number, e.g. mobile or land line.
        primary:
          type: boolean
          description: Flag denoting whether this is the main phone number.
        number:
          maxLength: 30
          minLength: 1
          type: string
          description: Phone number.
    PostalAddress:
      required:
        - key
        - type
      type: object
      properties:
        key:
          maxLength: 70
          minLength: 1
          type: string
          description: Unique key identifying the postal address.
        type:
          maxLength: 36
          minLength: 1
          type: string
          description: Key identifying the type of postal address, e.g. residential, business, po-box, mail-to, delivery-to.
        primary:
          type: boolean
          description: Flag denoting whether this is the main postal address.
        department:
          maxLength: 70
          type: string
          description: Department.
        subDepartment:
          maxLength: 70
          type: string
          description: Sub Department.
        addressLine:
          maxLength: 70
          type: string
          description: Address Line.
        buildingNumber:
          maxLength: 255
          type: string
          description: Building number.
        streetName:
          maxLength: 255
          type: string
          description: Street.
        townName:
          maxLength: 35
          type: string
          description: Town.
        postalCode:
          maxLength: 16
          type: string
          description: Postcode.
        countrySubDivision:
          maxLength: 35
          type: string
          description: Country sub-division.
        country:
          maxLength: 3
          type: string
          description: Country code - ISO 3166.
    Limit:
      title: Limit
      type: object
      properties:
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        transactional:
          $ref: '#/components/schemas/TransactionalLimit'
        daily:
          $ref: '#/components/schemas/DailyLimit'
        weekly:
          $ref: '#/components/schemas/WeeklyLimit'
        monthly:
          $ref: '#/components/schemas/MonthlyLimit'
        quarterly:
          $ref: '#/components/schemas/QuarterlyLimit'
        yearly:
          $ref: '#/components/schemas/YearlyLimit'
    UserProfile:
      title: UserProfile
      description: |
        User Data for User Profile Manager. Additional to Data included in User Model
      type: object
      properties:
        userId:
          type: string
        externalId:
          type: string
        userName:
          type: string
        name:
          $ref: '#/components/schemas/Name'
        displayName:
          type: string
        nickName:
          type: string
        profileUrl:
          type: string
        personalInformation:
          $ref: '#/components/schemas/PersonalInformation'
        identificationDetails:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationDetails'
        title:
          type: string
        userType:
          type: string
        preferredLanguage:
          type: string
        locale:
          type: string
        timezone:
          type: string
        active:
          type: boolean
        additionalEmails:
          type: array
          items:
            $ref: '#/components/schemas/Multivalued'
        additionalPhoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/Multivalued'
        ims:
          type: array
          items:
            $ref: '#/components/schemas/Multivalued'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Multivalued'
        x509Certificates:
          type: array
          items:
            $ref: '#/components/schemas/Multivalued'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        extended:
          type: object
      required:
        - userId
        - externalId
        - userName
    Name:
      title: Name
      type: object
      properties:
        formatted:
          type: string
        familyName:
          type: string
        givenName:
          type: string
        middleName:
          type: string
        honorificPrefix:
          type: string
        honorificSuffix:
          type: string
    PersonalInformation:
      title: PersonalInformation
      type: object
      properties:
        gender:
          type: string
        dateOfBirth:
          type: string
        countryOfBirth:
          type: string
        countryOfResidence:
          type: string
        nationalities:
          type: array
          items:
            type: string
        maritalStatus:
          type: string
        educationLevel:
          type: string
        employer:
          type: string
        employmentStatus:
          type: string
    IdentificationDetails:
      title: IdentificationDetails
      type: object
      properties:
        value:
          type: string
        type:
          type: string
        issueDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
        issueCountryCode:
          type: string
    Multivalued:
      title: Multivalued
      type: object
      properties:
        value:
          type: string
        display:
          type: string
        type:
          type: string
        primary:
          type: boolean
    Address:
      title: Address
      type: object
      properties:
        formatted:
          type: string
        streetAddress:
          type: string
        locality:
          type: string
        region:
          type: string
        postalCode:
          type: string
        country:
          type: string
        type:
          type: string
        primary:
          type: boolean

    ServiceAgreement:
      title:  Service Agreement
      description: |
        The formal vehicle that allows users of one entity to access products of that or other entities
        A Service agreement is:
        - A contract that includes one or more legal entities. A legal entity that is participating in a service agreement can allow a subset of its users to act through that service agreement and/or allow a subset of its products to be accessed through the service agreement. Within each service agreement, permissions to perform specific tasks are granted to users, including access to products shared by one or more legal entities (participating in that service agreement). As such, a service agreement is a way to give third party users specific access to your products.
        - A special kind of service agreement is called the master service agreement. This service agreement has one legal entity participant and once configured, the participant cannot be changed. Important to know is that once the user is granted with administrative permissions (e.g. manage account groups), he or she has the power to execute the task in any service agreement lower in the hierarchy. For example, if the user of the bank is assigned with manage account groups permission in the master service agreement of the bank, the user can manage account groups in any service agreement lower in the hierarchy.
        - A service agreement may be restricted in time, by setting a time bound. Permissions granted to users in the time-restricted service agreement, are active and may be consumed, only while the time bound is valid.
      properties:
        internalId:
          $ref: '#/components/schemas/InternalIdentifier'
        externalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        name:
          maxLength: 128
          minLength: 1
          pattern: ^\S(.*(\S))?$
          type: string
          description: The service agreement name
        description:
          maxLength: 255
          minLength: 1
          pattern: ^(\S|\n)((.|\n)*(\S|\n))?$
          type: string
          description: Description
        participants:
          type: array
          description: Participants of the service agreement
          items:
            $ref: '#/components/schemas/LegalEntityParticipant'
        validFromDate:
          type: string
          format: date
          description: Start date of the service agreement.
        validFromTime:
          type: string
          description: Start time of the service agreement.
        validUntilDate:
          type: string
          format: date
          description: End date of the service agreement.
        validUntilTime:
          type: string
          description: End time of the service agreement.
        status:
          $ref: '#/components/schemas/LegalEntityStatus'
        isMaster:
          type: boolean
          description: Master flag
        regularUserAps:
          $ref: '#/components/schemas/ApsIdentifiers'
        adminUserAps:
          $ref: '#/components/schemas/ApsIdentifiers'
        jobRoles:
          type: array
          items:
            $ref: '#/components/schemas/JobRole'
        creatorLegalEntity:
          $ref: '#/components/schemas/ExternalIdentifier'
        limit:
          $ref: '#/components/schemas/Limit'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ExternalContact'
        additions:
          type: object
          additionalProperties:
            type: string
    ApsIdentifiers:
      type: object
      properties:
        nameIdentifiers:
          type: array
          items:
            type: string
        idIdentifiers:
          type: array
          items:
            type: number
    LegalEntityParticipant:
      required:
        - externalId
        - sharingAccounts
        - sharingUsers
      type: object
      properties:
        internalId:
          $ref: '#/components/schemas/InternalIdentifier'
        externalId:
          $ref: '#/components/schemas/ExternalIdentifier'
        sharingUsers:
          type: boolean
          description: Boolean value if the Participant is sharing users
        sharingAccounts:
          type: boolean
          description: Boolean value if the participant is sharing accounts
        admins:
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
        users:
          type: array
          description: User external ids
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
        action:
          type: string
          description: the action to perform for this participant. Required for participant update flow
          enum:
            - "ADD"
            - "REMOVE"
        limit:
          $ref: '#/components/schemas/Limit'
    LegalEntityStatus:
      type: string
      description: Status of the entity
      enum:
        - ENABLED
        - DISABLED
    ###############################################
    ## Reusable Fields
    ###############################################
    InternalIdentifier:
      title: Interal Identifier
      type: string
      description: Internal Read Only Identifier
      readOnly: true
    ExternalIdentifier:
      title: External Identifier
      maxLength: 64
      minLength: 1
      pattern: ^[^\r\n]{1,64}$
      type: string
      description: External legal entity identifier.
    UrgentTransfer:
      type: boolean
      description: Defines if urgent transfer is allowed.
    ValidThru:
      type: string
      format: date-time
      description: Expiration date of a credit card, after which is no longer valid.
    ValueDateBalance:
      type: number
      description: The balance of the account on a specific date that needs to be used for the calculation of interest. NB! If no date is specified (like for the book date balance) the current date can be assumed.
    ProductNumber:
      maxLength: 36
      type: string
      description: The number identifying the contract.
    BBAN:
      maxLength: 50
      type: string
      description: Specifying the BBAN of the account.
    BIC:
      maxLength: 11
      type: string
      description: Bank Identifier Code - international bank code that identifies particular banks worldwide
    CardNumber:
      type: number
    CreditCardAccountNumber:
      maxLength: 32
      type: string
      description: The number of the account the credit card transactions settle on (so actually the reference to the settlement account of the card)?
    CreditLimitExpiryDate:
      type: string
      format: date-time
      description: The date after which overdraft will no longer be available to the account (renewed automatically or cancelled).
    CreditLimitInterestRate:
      type: number
      description: Overdraft Interest is an interest applied to the account for any time throughout the month when the account is overdrawn.
    CreditLimitUsage:
      type: number
      description: Monetary amount of the used overdraft.
    CrossCurrency:
      type: boolean
      description: Defines if cross currency transfer is allowed
    AccountHolderAddressLine1:
      maxLength: 70
      type: string
      description: Address of the Payer/Payee - Alternate address line for the account.
    AccountHolderAddressLine2:
      maxLength: 70
      type: string
      description: Address of the Payer/Payee - Alternate address line for the account.
    AccountHolderCountry:
      pattern: ^[A-Z]{2}$
      type: string
      description: Country of the account holder
    AccountHolderName:
      maxLength: 256
      type: string
      description: Name of the Payer/Payee i.e. Owner of the Account
    AccountHolderStreetName:
      maxLength: 70
      type: string
      description: Street name of the Payer/Payee - Alternate street name for the account.
    AccountInterestRate:
      type: number
      description: The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal.
    AccountOpeningDate:
      type: string
      format: date-time
    AccruedInterest:
      description: The interest that is earned (credit interest) or due (debit interest) but not settled yet.
      type: number
    AmountInArrear:
      type: number
      format: double
      description: The part of a debt that is overdue after missing one or more required payments. The amount of the arrears is the amount accrued from the date on which the first missed payment was due.
    ApplicableInterestRate:
      type: number
      description: The interest rate or rates which would be used for a particular product.
    AutoRenewalIndicator:
      type: boolean
      description: Indicates whether or not an product is to be continued after maturity automatically. Usually the product is renewed using the same principal and term unless renegotiation has taken place prior to expiration.
    RemainingCredit:
      type: number
      description: Amount of money the user is available to use from the Credit limit of the account
    OutstandingPayment:
      type: number
      description: Outstanding payment refers to the outstanding [unpaid] balance, i.e., the current amount due.
    OutstandingPrincipalAmount:
      type: number
      format: double
      description: This IS the value date balance of the product.
    MaturityAmount:
      type: number
      format: double
      description: Amount payable at the end of a holding period of a product (maturity date). For deposit all of the interest is usualy paid at maturity date (IF the term is shorter then one year).
    MaturityDate:
      type: string
      format: date-time
      description: End term of a holding period.
    MinimumPayment:
      type: number
      format: double
      description: The minimum payment set a percentage of balance, or a fixed cash amount.
    MinimumPaymentDueDate:
      type: string
      format: date-time
      description: Minimum Payment Due Date shown on your monthly statement to remain in good standing.
    MinimumRequiredBalance:
      type: number
      format: double
      description: Minimum amount that a customer must have in an account in order to receive some sort of service, such as keeping the account open or receive interest.
    MonthlyInstalmentAmount:
      type: number
      format: double
      description: A fixed payment amount paid by a borrower to the bank at a specified date each calendar month.
    TermNumber:
      type: number
      description: The number of times interest rate is paid on the settlement account.
    TermUnit:
      type: string
      description: The period of time and/or the interest rate arranged between Bank and customer.
      enum:
        - "Daily"
        - "Weekly"
        - "Monthly"
        - "Quarterly"
        - "Yearly"
    Town:
      maxLength: 35
      type: string
      description: Town of the Payer/Payee - Alternate town for the account.
    InterestSettlementAccount:
      maxLength: 32
      type: string
      description: Account that provides quick access to accumulated cash to facilitate daily settlements with other businesses.
    CreditAccount:
      type: boolean
      description: Indicator whether or not the product can be used in payment orders as credit account.
    DebitAccount:
      type: boolean
      description: Indicator whether or not the product can be used in payment orders as debit account.
    IBAN:
      maxLength: 34
      pattern: ^(AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW).*
      type: string
      description: Specifying the IBAN of the account.
    BankBranchCode:
      maxLength: 20
      type: string
      description: (This is to accomodate additional country specific fields like Sort Code in UK)
    StartDate:
      type: string
      format: 'date-time'
    PostCode:
      maxLength: 16
      type: string
      description: Post Code of the Payer/Payee
    CountrySubDivision:
      maxLength: 35
      type: string
      description: Country SubDivision of the Payer/Payee
    InterestPaymentFrequencyNumber:
      type: number
      description: Number of times per year when the accumulated interest is settled to the account on a regular basis. The frequency could be yearly, half-yearly, quarterly, monthly, weekly, daily (or not at all, until maturity)
    InterestPaymentFrequencyUnit:
      type: string
      description: The period of time and/or the interest rate arranged between Bank and customer.
      enum:
        - "Daily"
        - "Weekly"
        - "Monthly"
        - "Quarterly"
        - "Yearly"
    CurrencyCode:
      pattern: ^[A-Z]{3}$
      type: string
      description: The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount
    BookedBalance:
      type: object
      description: "Booked Balance"
      properties:
        amount:
          type: number
          format: double
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    AvailableBalance:
      type: object
      description: "Available Balance"
      properties:
        amount:
          type: number
          format: double
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    CreditLimit:
      type: object
      description: "Credit Limit"
      properties:
        amount:
          type: number
          format: double
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    PrincipalAmount:
      type: object
      description: "The amount that was (originally) contracted for the respective product. This is mainly used in the context of loans and deposits."
      properties:
        amount:
          type: number
          format: double
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    CurrentInvestment:
      type: object
      description: The total current value of all the securities kept in the account.
      properties:
        amount:
          type: number
          format: double
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    TransactionalLimit:
      type: number
      format: double
    DailyLimit:
      type: number
      format: double
    WeeklyLimit:
      type: number
      format: double
    MonthlyLimit:
      type: number
      format: double
    QuarterlyLimit:
      type: number
      format: double
    YearlyLimit:
      type: number
      format: double

    ProductState:
      type: object
      properties:
        externalStateId:
          maxLength: 50
          type: string
          description: An external unique identifier for the product state object.
        state:
          maxLength: 50
          type: string
          description: Name that describes the specific product state.

    ApprovalStatus:
      type: string
      description: Presentation approval status
      enum:
        - APPROVED
        - PENDING
        - REJECTED
      x-java-type: com.backbase.presentation.accessgroup.rest.spec.v2.accessgroups.ApprovalStatus
      x-java-enum-names:
        - APPROVED
        - PENDING
        - REJECTED


    BusinessFunctionGroup:
      required:
        - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/InternalIdentifier'
        legalEntityId:
          $ref: '#/components/schemas/InternalIdentifier'
        serviceAgreementId:
          $ref: '#/components/schemas/InternalIdentifier'
        name:
          maxLength: 128
          minLength: 1
          pattern: ^\S(.*(\S))?$
          type: string
          description: Function group name
        description:
          maxLength: 255
          minLength: 1
          pattern: ^(\S|\n)((.|\n)*(\S|\n))?$
          type: string
          description: Function group description
        type:
          type: string
          enum:
            - DEFAULT
            - SYSTEM
            - TEMPLATE
          description: Type of function group
          default: DEFAULT
        dataGroupsAllowed:
          type: boolean
          description: Wether this function group can be applied to data groups
        functions:
          type: array
          items:
            $ref: '#/components/schemas/BusinessFunction'
    BusinessFunction:
      required:
        - name
        - functionCode
        - functionId
        - privileges
        - resourceCode
        - resourceName
      type: object
      properties:
        name:
          maxLength: 32
          description: |-
            Name of the business function and unique In the system
            <project_prefix> <descriptive name>
          minLength: 1
          type: string
          example: "bankA PISP"
        functionId:
          description: |-
            Unique ID in the system
            Guidelines: <project_prefix>.<1xxx>
          maxLength: 36
          minLength: 1
          type: string
          example: "bankA.1000"
        functionCode:
          maxLength: 32
          minLength: 1
          type: string
          description: |-
            Unique code used for internationalization on front-end (Widget)
            Guidelines: same as function name in lower case, use dots instead of spaces
            On front-end you can map this code with the descriptive name of the business function. For example, Make payments from the business’s bank accounts using third party websites or software.
          example: bankA.pisp
        resourceName:
          description: |-
            Logical Grouping of Business Functions (not real usage at the moment, might be helpful in future)
            Guidelines: <project_prefix> <if the BF is part of some logical grouping or use the same name as the BF>
          maxLength: 32
          minLength: 1
          type: string
          example: bankA psd2
        resourceCode:
          description: |-
            Unique code used for internationalization on front-end (Widget) if required (for now we are not using this at all)
            Guidelines: same as resource_name in lower case, use dots instead of spaces
          maxLength: 32
          minLength: 1
          type: string
          example: bankA.psd2
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/Privilege'
    Privilege:
      required:
        - privilege
      type: object
      properties:
        privilege:
          maxLength: 16
          minLength: 1
          type: string
        supportsLimit:
          type: boolean
        limit:
          $ref: '#/components/schemas/Limit'
    AssignedPermission:
      type: object
      properties:
        permittedObjectInternalIds:
          type: array
          items:
            $ref: '#/components/schemas/InternalIdentifier'
        permittedObjectExternalIds:
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        resourceName:
          type: string
        functionName:
          type: string
        privileges:
          $ref: '#/components/schemas/Privilege'
        permittedObjects:
          type: object
          additionalProperties: true
    UserPreferences:
      description: 'Users defined preferences for a specific arrangement.'
      required:
        - userExternalId
      type: object
      properties:
        userExternalId:
          maxLength: 50
          type: string
          description: The unique User identifier related to these user preferences
        alias:
          maxLength: 50
          type: string
          description: The name that can be assigned by the user to label the arrangement
        visible:
          type: boolean
          description: User indicator whether to show or hide the arrangement on the
            front end
        favorite:
          type: boolean
          description: Indication whether an arrangement can be favorable for a user
        additions:
          type: object
          additionalProperties:
            type: string

    ExternalContact:
      description: 'External Contacts'
      type: object
      required:
        - accounts
        - externalId
        - name
      properties:
        accounts:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ExternalAccountInformation'
        externalId:
          $ref: '#/components/schemas/ExternalContactId'
        accessContextScope:
          $ref: '#/components/schemas/AccessContextScope'
        name:
          maxLength: 140
          type: string
          description: The name of a contact
        alias:
          maxLength: 80
          type: string
          description: Name will be displayed if alias field is not filled
        category:
          maxLength: 70
          type: string
          description: "Category to which the contact belongs to like employee, supplier."
        contactPerson:
          maxLength: 70
          type: string
          description: Contact person of the contact
        phoneNumber:
          maxLength: 30
          type: string
          description: Contact phone number of the contact
        emailId:
          maxLength: 255
          type: string
          description: Email-id of the contact
          format: email
        addressLine1:
          maxLength: 70
          type: string
          description: Address line 1
        addressLine2:
          maxLength: 70
          type: string
          description: Address line 2
        streetName:
          maxLength: 70
          type: string
          description: Street name
        town:
          maxLength: 35
          type: string
          description: City or town
        postCode:
          maxLength: 16
          type: string
          description: Address post code
        countrySubDivision:
          maxLength: 35
          type: string
          description: Country region or state
        country:
          maxLength: 2
          minLength: 2
          type: string
          description: ISO Country Code
        activeStatus:
          $ref: '#/components/schemas/ActiveContactStatus'
        additions:
          $ref: '#/components/schemas/Additions'

    ExternalAccountInformation:
      properties:
        externalId:
          $ref: '#/components/schemas/ExternalContactId'
        name:
          maxLength: 140
          type: string
          description: The name of an account
        alias:
          maxLength: 34
          type: string
          description: Name will be displayed if alias field is not filled
        accountType:
          maxLength: 10
          type: string
          description: "The type of the account, e.g. CHECKING/SAVINGS"
        accountNumber:
          maxLength: 34
          type: string
          description: "An account identifier. At least one of the account identifiers\
            \ (accountNumber, IBAN, phoneNumber or email) is mandatory"
        IBAN:
          maxLength: 34
          type: string
          description: "An account identifier. At least one of the account identifiers\
            \ (accountNumber, IBAN, phoneNumber or email) is mandatory"
        phoneNumber:
          $ref: '#/components/schemas/phone-number-identifier'
        email:
          $ref: '#/components/schemas/email-identifier'
        BIC:
          maxLength: 11
          type: string
          description: The Business Identifier Code as issued within the SWIFT domain
        bankCode:
          maxLength: 20
          type: string
          description: "The code assigned by a central bank, e.g. ABA RTN"
        bankName:
          maxLength: 140
          type: string
          description: Specifies the name of the bank where the account is issued
        bankAddressLine1:
          maxLength: 70
          type: string
          description: Bank address line 1
        bankAddressLine2:
          maxLength: 70
          type: string
          description: Bank address line 2
        bankStreetName:
          maxLength: 70
          type: string
          description: Bank street name
        bankTown:
          maxLength: 35
          type: string
          description: Bank city or town
        bankPostCode:
          maxLength: 16
          type: string
          description: Bank address post code
        bankCountrySubDivision:
          maxLength: 35
          type: string
          description: Bank country region or state
        bankCountry:
          maxLength: 2
          minLength: 2
          type: string
          description: ISO Country Code
        accountHolderAddressLine1:
          maxLength: 70
          type: string
          description: Account address line 1
        accountHolderAddressLine2:
          maxLength: 70
          type: string
          description: Account address line 2
        accountHolderStreetName:
          maxLength: 70
          type: string
          description: Account holder street name
        accountHolderTown:
          maxLength: 35
          type: string
          description: Account holder city or town
        accountHolderPostCode:
          maxLength: 16
          type: string
          description: Account holder address post code
        accountHolderCountrySubDivision:
          maxLength: 35
          type: string
          description: Account holder country region or state
        accountHolderCountry:
          maxLength: 2
          minLength: 2
          type: string
          description: ISO Country Code
        additions:
          $ref: '#/components/schemas/Additions'
    ExternalContactId:
      maxLength: 32
      type: string
      description: Reference of an ID from another (external) system.
    AccessContextScope:
      type: string
      description: "Access context scope of the contact, either ServiceAgreement (SA),\
        \ LegalEntity (LE) or User (USER).\n"
      enum:
        - SA
        - LE
    ActiveContactStatus:
      type: string
      description: |
        The active status of a contact. When approvals is not enabled ACTIVE is the only value possible.
        Otherwise following values mean:
        ACTIVE - fully approved;
        PENDING_APPROVAL - the contact needs further approval to become active.
      enum:
        - ACTIVE
        - PENDING_APPROVAL
    phone-number-identifier:
      maxLength: 30
      type: string
      description: "A phone number account identifier. At least one of the account\
        \ identifiers (accountNumber, IBAN, phoneNumber or email) is mandatory."
    email-identifier:
      maxLength: 255
      type: string
      description: "An email account identifier. At least one of the account identifiers\
        \ (accountNumber, IBAN, phoneNumber or email) is mandatory."
      format: email
    Additions:
      title: Additions
      type: object
      additionalProperties:
        type: string
      description: Additional properties

    ###############################################
    ## Additional Data Group Items
    ###############################################

    CustomDataGroupItem:
      type: object
      properties:
        externalId:
          type: string
          description: "Data Group Item Internal Id"
        internalId:
          type: string
          description: "Data Group Item External Id"

    ###############################################
    ## Async Legal Entity
    ###############################################
    LegalEntityResponse:
      type: object
      description: "Unit of Work processing the Legal Entities."
      properties:
        id:
          type: string
        state:
          type: string
          enum:
            - NEW
            - ACCEPTED
            - IN_PROGRESS
            - FAILED
            - FAILED_RETRIES_EXHAUSTED
            - COMPLETED
            - COMPLETED_AFTER_RETRIES
            - ROLLBACK_IN_PROGRESS
            - ROLLBACK_COMPLETED
            - ROLLBACK_FAILED
        locked:
          type: boolean
        registeredAt:
          type: string
          format: date-time
        lockedAt:
          type: string
          format: date-time
        nextAttemptAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
        retries:
          type: integer
        tasks:
          type: array
          description: Tasks belonging to the Unit Of Work. A Unit of Work is complete when all tasks are completed.
          items:
            description: Unit Of Work Task
            type: object
            properties:
              legalEntityExtenralId:
                type: string
              state:
                type: string
                enum:
                  - ACCEPTED
                  - IN_PROGRESS
                  - FAILED
                  - COMPLETED
              registeredAt:
                type: string
                format: date-time
              finishedAt:
                type: string
                format: date-time
              history:
                type: array
                description: Task Execution History
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    entity:
                      description: Entity Type Updated in DBS. (Such as Arrangement, User, Data Access Group etc)
                      type: string
                    internalid:
                      description: DBS Internal ID
                      type: string
                    externalId:
                      type: string
                      description: Customer External ID
                    state:
                      description: Resulted Entity Action
                      type: string
                      enum:
                        - CREATED
                        - UDPATED
                        - DELETED
                        - REJECTED
                        - FAILED
                    message:
                      description: Message describing operation performed on task
                      type: string
      readOnly: true

    UpdatedServiceAgreementResponse:
      type: object
      description: "Response on Update Service Agreement"
      properties:
        id:
          type: string
        state:
          type: string
          enum:
            - NEW
            - ACCEPTED
            - IN_PROGRESS
            - FAILED
            - FAILED_RETRIES_EXHAUSTED
            - COMPLETED
            - COMPLETED_AFTER_RETRIES
            - ROLLBACK_IN_PROGRESS
            - ROLLBACK_COMPLETED
            - ROLLBACK_FAILED
        locked:
          type: boolean
        registeredAt:
          type: string
          format: date-time
        lockedAt:
          type: string
          format: date-time
        nextAttemptAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
        retries:
          type: integer
        tasks:
          type: array
          description: Tasks belonging to the Unit Of Work. A Unit of Work is complete when all tasks are completed.
          items:
            description: Unit Of Work Task
            type: object
            properties:
              externalId:
                type: string
                description: service agreement external id
              state:
                type: string
                enum:
                  - ACCEPTED
                  - IN_PROGRESS
                  - FAILED
                  - COMPLETED
              registeredAt:
                type: string
                format: date-time
              finishedAt:
                type: string
                format: date-time
              history:
                type: array
                description: Task Execution History
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    entity:
                      description: Entity Type Updated in DBS. (Such as Arrangement, User, Data Access Group etc)
                      type: string
                    internalId:
                      description: DBS Internal ID
                      type: string
                    externalId:
                      type: string
                      description: Customer External ID
                    state:
                      description: Resulted Entity Action
                      type: string
                      enum:
                        - CREATED
                        - UDPATED
                        - DELETED
                        - REJECTED
                        - FAILED
                    message:
                      description: Message describing operation performed on task
                      type: string

    ###############################################
    ## Generic Schemas
    ###############################################
    Error:
      type: object
      properties:
        message:
          type: string
          description: Any further information
        errors:
          type: array
          description: Detailed error information
          items:
            type: object
            properties:
              message:
                type: string
                description: Default Message. Any further information.
              key:
                type: string
                description: '{capability-name}.api.{api-key-name}. For generated
                  validation errors this is the path in the document the error resolves
                  to. e.g. object name + ''.'' + field'
              context:
                type: object
                description: Context can be anything used to construct localised messages.
                x-java-type: java.util.Map<String,String>
            description: A validation error
    JobRole:
      title: "Job Role"
      properties:
        id:
          $ref: '#/components/schemas/InternalIdentifier'
        name:
          maxLength: 128
          minLength: 1
          pattern: ^\S(.*(\S))?$
          type: string
          description: Job role name
        description:
          maxLength: 255
          minLength: 1
          pattern: ^(\S|\n)((.|\n)*(\S|\n))?$
          type: string
          description: Job role description
        functionGroups:
          type: array
          items:
            $ref: '#/components/schemas/BusinessFunctionGroup'
        validFromDate:
          type: string
          description: Start date of the function group. (date-only from RFC3339 - yyyy-MM-dd)
        validFromTime:
          type: string
          description: Start time of the function group. (time-only from RFC3339 - HH:mm:ss)
        validUntilDate:
          type: string
          description: End date of the function group. (date-only from RFC3339 - yyyy-MM-dd)
        validUntilTime:
          type: string
          description: End time of the function group. (time-only from RFC3339 - HH:mm:ss)
        apsId:
          type: number
          description: Assignable Permission Set Id
        apsName:
          type: string
          description: Assignable Permission Set name
          maxLength: 128
      required:
        - name
        - description
    ReferenceJobRole:
      title: "Reference Job Role"
      allOf:
        - $ref: '#/components/schemas/JobRole'
    UpdatedServiceAgreement:
      title: "Updated Service Agreement"
      allOf:
        - $ref: '#/components/schemas/ServiceAgreement'
      properties:
        productGroups:
          type: array
          items:
            $ref: '#/components/schemas/BaseProductGroup'
        saUsers:
          type: array
          items:
            $ref: '#/components/schemas/ServiceAgreementUserAction'
        saAdmins:
          type: array
          items:
            $ref: '#/components/schemas/ServiceAgreementUserAction'
    ServiceAgreementUserAction:
      title: "Service Agreement user update action"
      properties:
        userProfile:
          $ref: '#/components/schemas/JobProfileUser'
          description: User and job roles to associate under service agreement
        action:
          type: string
          description: add or remove user from service agreement
          enum:
            - "ADD"
            - "REMOVE"

  examples:
    RootLegalEntityHierarchyExample:
      description: "Example Request for setting up Root Legal Entity Structure as described on Backbase Community"
      value:
        name: "Bank"
        externalId: "bank"
        legalEntityType: "BANK"
        subsidiaries:
          - name: "John"
            externalId: "john"
            legalEntityType: "CUSTOMER"
            administrators:
              - externalId: "john"
                fullName: "John"
          - name: "Sara"
            externalId: "sara"
            legalEntityType: "CUSTOMER"
            administrators:
              - externalId: "sara"
                fullName: "Sara"
          - name: "Backbase"
            externalId: "backbase"
            legalEntityType: "CUSTOMER"
            subsidiaries:
              - name: "Cardiff"
                externalId: "cardiff"
                legalEntityType: "CUSTOMER"
            administrators:
              - externalId: "backbaseAdmin"
                fullName: "Backbase Admin"
          - name: "ASP"
            externalId: "asp"
            legalEntityType: "CUSTOMER"
            administrators:
              - externalId: "ASPAdmin"
                fullName: "ASP Admin"
        administrators:
          - externalId: "admin"
            fullName: "Administrator"
    RootLegalEntityForMambu:
      description: "Root Legal Entity Setup for Mambu Integration"
      value:
        name: "Backbase Root Bank"
        externalId: "bank"
        legalEntityType: "BANK"
        administrators:
          - externalId: "admin"
            fullName: "Administrator"
            users:
              - externalId: "admin"
                fullName: "admin"
                businessFunctionGroups:
                  - name: "Entitlements"
                    functions:
                      - functionId: "1019"
                        functionCode: "manage.data.groups"
                        resourceName: "Entitlements"
                        resourceCode: "entitlements"
                        privileges:
                          - privilege: "view"
                          - privilege: "create"
                          - privilege: "edit"
                          - privilege: "delete"
                      - functionId: "1020"
                        functionCode: "manage.function.groups"
                        resourceName: "Entitlements"
                        resourceCode: "entitlements"
                        privileges:
                          - privilege: "view"
                          - privilege: "create"
                          - privilege: "edit"
                          - privilege: "delete"
                  - name: "Legal Entity"
                    functions:
                      - functionId: "1011"
                        functionCode: "manage.legalentities"
                        resourceName: "Legal Entity"
                        resourceCode: "legalentity"
                        privileges:
                          - privilege: "create"
                          - privilege: "edit"
                          - privilege: "delete"
                          - privilege: "view"
                  - name: "Service Agreement"
                    functions:
                      - functionId: "1007"
                        functionCode: "assign.users"
                        resourceName: "Service Agreement"
                        resourceCode: "service.agreement"
                        privileges:
                          - privilege: "view"
                          - privilege: "create"
                          - privilege: "edit"
                      - functionId: "1028"
                        functionCode: "manage.service.agreements"
                        resourceName: "Service Agreement"
                        resourceCode: "service.agreement"
                        privileges:
                          - privilege: "view"
                          - privilege: "create"
                          - privilege: "edit"
                          - privilege: "delete"
                      - functionId: "1009"
                        functionCode: "assign.permissions"
                        resourceName: "Service Agreement"
                        resourceCode: "service.agreement"
                        privileges:
                          - privilege: "view"
                          - privilege: "create"
                          - privilege: "edit"
                  - name: "User"
                    functions:
                      - functionId: "1010"
                        functionCode: "manage.users"
                        resourceName: "User"
                        resourceCode: "user"
                        privileges:
                          - privilege: "view"
        subsidiaries:
          - name: "Mambu"
            externalId: "mambu-bank"
            legalEntityType: "CUSTOMER"
            administrators:
              - externalId: "mambu-admin"
                fullName: "Mambu Admin"
            users:
              - externalId: "mambu-admin"
                fullName: "Mambu Admin"
                referenceJobRoles:
                  - "admin"
    RootLegalEntityHierarchyWithArrangements:
      description: "Example setup with arrangements"
      value:
        name: "Bank"
        externalId: "bank"
        legalEntityType: "BANK"
        subsidiaries:
          - name: "John"
            externalId: "john"
            legalEntityType: "CUSTOMER"
            productGroups:
              - productGroupType: "ARRANGEMENTS"
                users:
                  - user:
                      externalId: "john"
                      fullName: "John"
                    referenceJobRoles:
                      - "full-access-sepa"
                currentAccounts:
                  - iban: "NL40INGB1876219181"
                    bookedBalance:
                      amount: 5245070.50
                      currencyCode: "EUR"
                    availableBalance:
                      amount: 504096.90
                      currencyCode: "EUR"
                    creditLimit:
                      amount: 732884.60
                      currencyCode: "EUR"
                    IBAN: "NL40INGB1876219181"
                    urgentTransferAllowed: true
                    bankBranchCode: "ING_AMSTERDAM"
                    accruedInterest: 3
                    startDate: "2016-02-10T15:49:55.457+01:00"
                    externalId: "current-account"
                    productTypeExternalId: "current-account"
                    name: "My Current Account "
                    externalTransferAllowed: true
                    crossCurrencyAllowed: true
                    bankAlias: "Johns Current Account"
                    accountOpeningDate: "2016-02-10T15:49:55.459+01:00"
                    currency: "EUR"
                    usersPreferences:
                      - userExternalId: john
                        alias: My Bank Account
                        visible: true
                        favorite: false
                savingAccounts:
                  - iban: "NL42INGB4416709382"
                    bookedBalance:
                      amount: 8930709.60
                      currencyCode: "EUR"
                    accruedInterest: 3
                    IBAN: "NL42INGB4416709382"
                    urgentTransferAllowed: true
                    bankBranchCode: "ING_AMSTERDAM"
                    startDate: "2016-02-10T15:49:55.465+01:00"
                    externalId: "savings-account"
                    productTypeExternalId: "savings-account"
                    name: "My Savings Account "
                    externalTransferAllowed: true
                    crossCurrencyAllowed: true
                    bankAlias: "Johns savings Account"
                    accountOpeningDate: "2016-02-10T15:49:55.465+01:00"
                    currency: "EUR"
            users:
              - user:
                  externalId: "john"
                  fullName: "John"
                referenceJobRoles:
                  - "full-access-sepa"
            administrators:
              - externalId: "john"
                fullName: "John"
        administrators:
          - externalId: "admin"
            fullName: "Administrator"
    LegalEntitiesForMockBack:
      description: "10 Random Legal Entities"
      value:
        - name: "Shanell Kiehn"
          externalId: "shanell.kiehn"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "shanell.kiehn"
                    fullName: "Shanell Kiehn"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "GR957435632JKK4ZCPG58KKMGBE"
                  externalId: "GWIMF64"
                  productTypeExternalId: "standard-account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2019-02-24T14:14:11.328+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.328+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 4308.91
                    currencyCode: "EUR"
                  IBAN: "GR957435632JKK4ZCPG58KKMGBE"
                  urgentTransferAllowed: true
                  bankBranchCode: "743"
                  accountInterestRate: 0.05496599201099878
                  valueDateBalance: 4308.91
                  creditLimitInterestRate: 0.12436203743926504
                  creditLimitExpiryDate: "2021-06-08T14:14:11.337+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - number: "4929392503720576"
                      expiryDate: "2020-11-07T14:14:11.339+01:00"
                      cardId: "^ONR37"
                      cardholderName: "Shanell Kiehn"
                      cardType: "VISA"
                  accountHolderName: "Shanell Kiehn"
                  startDate: "2019-02-24T14:14:11.328+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "7422 Cristin Roads"
                  accountHolderAddressLine2: "Apt. 373"
                  accountHolderStreetName: "Manuel Mountain"
                  town: "Port Johannaview"
                  postCode: "34252-9346"
                  countrySubDivision: "GR"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Ecuador"
          users:
            - user:
                externalId: "shanell.kiehn"
                fullName: "Shanell Kiehn"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "shanell.kiehn"
              fullName: "Shanell Kiehn"
        - name: "Kenna Botsford"
          externalId: "kenna.botsford"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "kenna.botsford"
                    fullName: "Kenna Botsford"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "BH98HWAMPDFFF3TT1UI3DC"
                  externalId: "KCSXL88"
                  productTypeExternalId: "deluxe-account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2019-04-29T14:14:11.396+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.396+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 4151.51
                    currencyCode: "EUR"
                  IBAN: "BH98HWAMPDFFF3TT1UI3DC"
                  urgentTransferAllowed: true
                  bankBranchCode: "HWAM"
                  accountInterestRate: 0.017777512507900908
                  valueDateBalance: 4151.51
                  creditLimitInterestRate: 0.1365514940386054
                  creditLimitExpiryDate: "2020-12-19T14:14:11.396+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - number: "2224152121462829"
                      expiryDate: "2020-07-07T14:14:11.397+01:00"
                      cardId: "^NQW05"
                      cardholderName: "Kenna Botsford"
                      cardType: "MASTERCARD"
                  accountHolderName: "Kenna Botsford"
                  startDate: "2019-04-29T14:14:11.396+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "16404 Renner Islands"
                  accountHolderAddressLine2: "Suite 791"
                  accountHolderStreetName: "Kelsie Parkway"
                  town: "South Scarlett"
                  postCode: "47152"
                  countrySubDivision: "BH"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Guernsey"
          users:
            - user:
                externalId: "kenna.botsford"
                fullName: "Kenna Botsford"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "kenna.botsford"
              fullName: "Kenna Botsford"
        - name: "Zelda Thompson"
          externalId: "zelda.thompson"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "zelda.thompson"
                    fullName: "Zelda Thompson"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "PK69686H5908387312580094"
                  externalId: "CBLDI34"
                  productTypeExternalId: "deluxe-account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2018-11-27T14:14:11.439+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.439+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 587.61
                    currencyCode: "EUR"
                  IBAN: "PK69686H5908387312580094"
                  urgentTransferAllowed: true
                  bankBranchCode: "686H"
                  accountInterestRate: 0.013757821618242894
                  valueDateBalance: 587.61
                  creditLimitInterestRate: 0.11157122362407977
                  creditLimitExpiryDate: "2021-01-22T14:14:11.439+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - expiryDate: "2020-11-22T14:14:11.440+01:00"
                      cardId: "^ZAU39"
                      cardholderName: "Zelda Thompson"
                      cardType: "MAESTRO"
                  accountHolderName: "Zelda Thompson"
                  startDate: "2018-11-27T14:14:11.439+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "99699 Herschel Rapid"
                  accountHolderAddressLine2: "Suite 083"
                  accountHolderStreetName: "Tynisha Crossroad"
                  town: "Pierrestad"
                  postCode: "68163-0212"
                  countrySubDivision: "PK"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Sierra Leone"
          users:
            - user:
                externalId: "zelda.thompson"
                fullName: "Zelda Thompson"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "zelda.thompson"
              fullName: "Zelda Thompson"
        - name: "Vella Wilderman"
          externalId: "vella.wilderman"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "vella.wilderman"
                    fullName: "Vella Wilderman"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "CZ5061840609411178802888"
                  externalId: "VLTWA73"
                  productTypeExternalId: "standard-account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2019-02-20T14:14:11.483+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.483+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 327.56
                    currencyCode: "EUR"
                  IBAN: "CZ5061840609411178802888"
                  urgentTransferAllowed: true
                  bankBranchCode: "6184"
                  accountInterestRate: 0.0315735855158175
                  valueDateBalance: 327.56
                  creditLimitInterestRate: 0.1566414483161877
                  creditLimitExpiryDate: "2020-10-19T14:14:11.483+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - expiryDate: "2020-10-19T14:14:11.484+01:00"
                      cardId: "^CQM75"
                      cardholderName: "Vella Wilderman"
                      cardType: "MAESTRO"
                  accountHolderName: "Vella Wilderman"
                  startDate: "2019-02-20T14:14:11.483+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "9708 Scarlett Circle"
                  accountHolderAddressLine2: "Apt. 610"
                  accountHolderStreetName: "Bosco Roads"
                  town: "East Elenore"
                  postCode: "76225-0566"
                  countrySubDivision: "CZ"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Syrian Arab Republic"
          users:
            - user:
                externalId: "vella.wilderman"
                fullName: "Vella Wilderman"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "vella.wilderman"
              fullName: "Vella Wilderman"
        - name: "Homer Watsica"
          externalId: "homer.watsica"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "homer.watsica"
                    fullName: "Homer Watsica"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "RO74JNRQAD88H2QMMAZL8H3M"
                  externalId: "UOAGV81"
                  productTypeExternalId: "8a85878f707c6d9a01708b3f30df60ac"
                  name: "USD Deposit Account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2019-02-07T14:14:11.529+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.529+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 3028.40
                    currencyCode: "EUR"
                  IBAN: "RO74JNRQAD88H2QMMAZL8H3M"
                  urgentTransferAllowed: true
                  bankBranchCode: "JNRQ"
                  accountInterestRate: 0.011516100808664363
                  valueDateBalance: 3028.40
                  creditLimitInterestRate: 0.12507619729504982
                  creditLimitExpiryDate: "2021-07-09T14:14:11.529+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - number: "2222647076361704"
                      expiryDate: "2020-10-27T14:14:11.530+01:00"
                      cardId: "^KSN92"
                      cardholderName: "Homer Watsica"
                      cardType: "MASTERCARD"
                  accountHolderName: "Homer Watsica"
                  startDate: "2019-02-07T14:14:11.529+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "5128 Salvatore Spring"
                  accountHolderAddressLine2: "Suite 972"
                  accountHolderStreetName: "Jody Viaduct"
                  town: "Nicolasburgh"
                  postCode: "16661"
                  countrySubDivision: "RO"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Cayman Islands"
          users:
            - user:
                externalId: "homer.watsica"
                fullName: "Homer Watsica"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "homer.watsica"
              fullName: "Homer Watsica"
        - name: "Nidia Breitenberg"
          externalId: "nidia.breitenberg"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "nidia.breitenberg"
                    fullName: "Nidia Breitenberg"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "QA48QOTMRL8PVJUEH5SRKRBOJQ51T"
                  externalId: "YWAVG22"
                  productTypeExternalId: "8a8587e86fe769dc016febae7ff926e1"
                  name: "Current Account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2018-12-04T14:14:11.576+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.576+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 363.40
                    currencyCode: "EUR"
                  IBAN: "QA48QOTMRL8PVJUEH5SRKRBOJQ51T"
                  urgentTransferAllowed: true
                  bankBranchCode: "QOTM"
                  accountInterestRate: 0.010457531089592234
                  valueDateBalance: 363.40
                  creditLimitInterestRate: 0.10751141341245168
                  creditLimitExpiryDate: "2021-03-07T14:14:11.576+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - number: "4024007148254682"
                      expiryDate: "2020-10-29T14:14:11.577+01:00"
                      cardId: "^ZHU40"
                      cardholderName: "Nidia Breitenberg"
                      cardType: "VISA"
                  accountHolderName: "Nidia Breitenberg"
                  startDate: "2018-12-04T14:14:11.576+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "3915 Gutkowski Viaduct"
                  accountHolderAddressLine2: "Suite 150"
                  accountHolderStreetName: "Michal Meadows"
                  town: "East Israelmouth"
                  postCode: "80504"
                  countrySubDivision: "QA"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Isle of Man"
          users:
            - user:
                externalId: "nidia.breitenberg"
                fullName: "Nidia Breitenberg"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "nidia.breitenberg"
              fullName: "Nidia Breitenberg"
        - name: "Ferdinand Reinger"
          externalId: "ferdinand.reinger"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "ferdinand.reinger"
                    fullName: "Ferdinand Reinger"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "AT358933130029393196"
                  externalId: "LASDS24"
                  productTypeExternalId: "standard-account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2019-03-18T14:14:11.62+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.62+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 593.69
                    currencyCode: "EUR"
                  IBAN: "AT358933130029393196"
                  urgentTransferAllowed: true
                  bankBranchCode: "89331"
                  accountInterestRate: 0.0127220220640926
                  valueDateBalance: 593.69
                  creditLimitInterestRate: 0.12072777693028541
                  creditLimitExpiryDate: "2021-01-19T14:14:11.62+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - expiryDate: "2020-10-15T14:14:11.621+01:00"
                      cardId: "^BDR84"
                      cardholderName: "Ferdinand Reinger"
                      cardType: "MAESTRO"
                  accountHolderName: "Ferdinand Reinger"
                  startDate: "2019-03-18T14:14:11.62+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "56289 Kenneth Wells"
                  accountHolderAddressLine2: "Suite 412"
                  accountHolderStreetName: "Beier Villages"
                  town: "Rheaville"
                  postCode: "40012-0060"
                  countrySubDivision: "AT"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Timor-Leste"
          users:
            - user:
                externalId: "ferdinand.reinger"
                fullName: "Ferdinand Reinger"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "ferdinand.reinger"
              fullName: "Ferdinand Reinger"
        - name: "Lashaun Feil"
          externalId: "lashaun.feil"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "lashaun.feil"
                    fullName: "Lashaun Feil"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "DK0243345319922575"
                  externalId: "JLAYR35"
                  productTypeExternalId: "8a8587e86fe769dc016febae7ff926e1"
                  name: "Current Account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2019-04-11T14:14:11.664+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.664+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 3966.24
                    currencyCode: "EUR"
                  IBAN: "DK0243345319922575"
                  urgentTransferAllowed: true
                  bankBranchCode: "4334"
                  accountInterestRate: 0.05814652103576375
                  valueDateBalance: 3966.24
                  creditLimitInterestRate: 0.15044870259279622
                  creditLimitExpiryDate: "2021-03-03T14:14:11.664+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - expiryDate: "2020-12-03T14:14:11.664+01:00"
                      cardId: "^LIY08"
                      cardholderName: "Lashaun Feil"
                      cardType: "MAESTRO"
                  accountHolderName: "Lashaun Feil"
                  startDate: "2019-04-11T14:14:11.664+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "19230 Ledner Manor"
                  accountHolderAddressLine2: "Apt. 350"
                  accountHolderStreetName: "Schulist Walks"
                  town: "Lemkeshire"
                  postCode: "49463"
                  countrySubDivision: "DK"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Cuba"
          users:
            - user:
                externalId: "lashaun.feil"
                fullName: "Lashaun Feil"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "lashaun.feil"
              fullName: "Lashaun Feil"
        - name: "Chi Kessler"
          externalId: "chi.kessler"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "chi.kessler"
                    fullName: "Chi Kessler"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "CR5886314494093857922"
                  externalId: "ENAJV26"
                  productTypeExternalId: "8a85878c6a01f12d016a0246708b31a4"
                  name: "Overdraft Product"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2018-12-08T14:14:11.697+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.697+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 4774.10
                    currencyCode: "EUR"
                  IBAN: "CR5886314494093857922"
                  urgentTransferAllowed: true
                  bankBranchCode: "863"
                  accountInterestRate: 0.040927174170449825
                  valueDateBalance: 4774.10
                  creditLimitInterestRate: 0.155185911358849
                  creditLimitExpiryDate: "2021-05-07T14:14:11.697+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - number: "4485589438852566"
                      expiryDate: "2020-06-21T14:14:11.698+01:00"
                      cardId: "^PJZ06"
                      cardholderName: "Chi Kessler"
                      cardType: "VISA"
                  accountHolderName: "Chi Kessler"
                  startDate: "2018-12-08T14:14:11.697+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "5467 Zane Club"
                  accountHolderAddressLine2: "Suite 187"
                  accountHolderStreetName: "Kilback Pine"
                  town: "West Arden"
                  postCode: "20010"
                  countrySubDivision: "CR"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Aruba"
          users:
            - user:
                externalId: "chi.kessler"
                fullName: "Chi Kessler"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "chi.kessler"
              fullName: "Chi Kessler"
        - name: "Sam Carroll"
          externalId: "sam.carroll"
          legalEntityType: "CUSTOMER"
          parentExternalId: "bank"
          productGroups:
            - productGroupType: "ARRANGEMENTS"
              name: "Generated Product Group"
              users:
                - user:
                    externalId: "sam.carroll"
                    fullName: "Sam Carroll"
                  referenceJobRoles:
                    - "full-access-sepa"
              currentAccounts:
                - iban: "KZ74641JWP4KE3PK3Q4E"
                  externalId: "NICWX71"
                  productTypeExternalId: "8a8587e86fe769dc016febae7ff926e1"
                  name: "Current Account"
                  externalTransferAllowed: true
                  crossCurrencyAllowed: true
                  sourceId: "stream-product-generator"
                  accountOpeningDate: "2018-12-03T14:14:11.724+01:00"
                  lastUpdateDate: "2020-03-08T14:14:11.724+01:00"
                  currency: "EUR"
                  availableBalance:
                    amount: 2623.82
                    currencyCode: "EUR"
                  IBAN: "KZ74641JWP4KE3PK3Q4E"
                  urgentTransferAllowed: true
                  bankBranchCode: "641"
                  accountInterestRate: 0.06885950836213794
                  valueDateBalance: 2623.82
                  creditLimitInterestRate: 0.11073714997829028
                  creditLimitExpiryDate: "2021-04-14T14:14:11.724+01:00"
                  accruedInterest: 0
                  debitCardsItems:
                    - number: "2223012280716731"
                      expiryDate: "2020-07-27T14:14:11.724+01:00"
                      cardId: "^QDH18"
                      cardholderName: "Sam Carroll"
                      cardType: "MASTERCARD"
                  accountHolderName: "Sam Carroll"
                  startDate: "2018-12-03T14:14:11.724+01:00"
                  minimumRequiredBalance: 0
                  accountHolderAddressLine1: "165 Gutkowski Field"
                  accountHolderAddressLine2: "Suite 356"
                  accountHolderStreetName: "Trudie Streets"
                  town: "Marksburgh"
                  postCode: "53617"
                  countrySubDivision: "KZ"
                  creditAccount: false
                  debitAccount: true
                  accountHolderCountry: "Cuba"
          users:
            - user:
                externalId: "sam.carroll"
                fullName: "Sam Carroll"
              referenceJobRoles:
                - "full-access-sepa"
          administrators:
            - externalId: "sam.carroll"
              fullName: "Sam Carroll"
    CustomServiceAgreement:
      description: "Custom Service Agreement"
      value:
        internalId: "serviceAgreement1"
        externalId: "serviceAgreementEx1"
        name: "service_agreement_1"
        description: "service agreement 1"
        participants:
          - externalId: "participant1"
            sharingUsers: true
            sharingAccounts: true
            action: "ADD"
        validFromDate: "2021-03-10"
        validFromTime: "01:00:00"
        validUntilDate: "2024-03-10"
        validUntilTime: "01:00:00"
        status: "ENABLED"
        productGroups:
          - productGroupType: "ARRANGEMENTS"
            name: "shared-data-group-with-123456789"
            currentAccounts:
              - externalId: "48900955"
              - externalId: "50088189"
        saUsers:
          - userProfile:
              user:
                externalId: "user1"
              referenceJobRoleNames:
                - "jobRole1"
            actions: "ADD"
          - userProfile:
              user:
                externalId: "user2"
            actions: "REMOVE"
        saAdmin:
          - userProfile:
              user:
                externalId: "admin1"
              referenceJobRoleNames:
                - "adminRole1"
            actions: "ADD"