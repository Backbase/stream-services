# https://docs.docker.com/compose/compose-file/

x-common-variables: &common-variables
  JAVA_TOOL_OPTIONS: -XX:MaxRAMPercentage=60.0
  SIG_SECRET_KEY: JWTSecretKeyDontUseInProduction!
  USERCTX_KEY: JWTSecretKeyDontUseInProduction!
  logging.level.com.backbase: DEBUG
  logging.level.com.backbase.buildingblocks.multitenancy.datasource.MultiDataSourceHealthIndicator: INFO
  logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
  server.shutdown: graceful
  eureka.client.serviceUrl.defaultZone: http://registry:8080/eureka
  eureka.client.healthcheck.enabled: true
  eureka.client.registry-fetch-interval-seconds: 15
  eureka.client.instance-info-replication-interval-seconds: 15
  eureka.instance.non-secure-port: 8080
  eureka.instance.initialStatus: STARTING
  management.endpoints.web.exposure.include: '*'
  management.endpoints.enabled-by-default: true
  management.security.roles: ANONYMOUS,ACTUATOR
  management.endpoint.env.show-values: ALWAYS
  management.endpoint.configprops.show-values: ALWAYS
  management.tracing.enabled: false
  backbase.multi-tenancy.enabled: true
  backbase.multi-tenancy.tenants[0].id: tbb
  backbase.multi-tenancy.tenants[1].id: tmt
  spring.main.banner-mode: off
  spring.cloud.config.enabled: false
  spring.cloud.kubernetes.enabled: false
  backbase.security.public.paths: /integration-api/**
  backbase.security.mtls.enabled: false
  backbase.audit.enabled: true
  backbase.http.request-logging-filter.max-payload-length: 5000

x-database-variables: &database-variables
  spring.liquibase.enabled: true
  spring.datasource.username: root
  spring.datasource.password: root
  spring.datasource.url: jdbc:mysql://mysql:3306?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true
  spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
  backbase.multi-tenancy.datasource.strategy: SWITCH_CATALOG

x-message-broker-variables: &message-broker-variables
  spring.activemq.broker-url: tcp://activemq:61616
  spring.activemq.user: admin
  spring.activemq.password: admin

x-healthcheck-defaults: &healthcheck-defaults
  start_period: 60s
  interval: 15s
  timeout: 3s
  retries: 15

name: stream

volumes:
  mysql_data:
    driver: local

services:
  # External Dependencies
  mysql:
    image: mysql:8
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d:rw
    healthcheck:
      test: mysqladmin ping --silent
      interval: 10s
      timeout: 5s
      retries: 5

  activemq:
    image: apache/activemq-classic
    ports:
      - "61616:61616"
      - "8161:8161"
    healthcheck:
      test: activemq status
      interval: 10s
      timeout: 5s
      retries: 5

  wiremock:
    image: wiremock/wiremock:2.35.1-1
    ports:
      - "9000:8080"
    command:
      - --verbose
      - --global-response-templating
    volumes:
      - ./stubs:/home/wiremock

  # Backbase Services
  registry:
    image: repo.backbase.com/backbase-docker-releases/registry:${BB_VERSION}
    ports:
      - "8761:8080"
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar" ]

  token-converter:
    image: repo.backbase.com/backbase-docker-releases/oidc-token-converter-service:${BB_VERSION}
    ports:
      - "7779:8080"
    environment:
      <<: *common-variables
      backbase.oidc-token-converter.whitelistedDomains[0].internalHostScheme: http
      backbase.oidc-token-converter.whitelistedDomains[0].internalHost: identity:8080
      backbase.oidc-token-converter.whitelistedDomains[0].issuerHost: localhost
      backbase.multi-tenancy.tenant-filter.should-not-filter-paths: /oauth/token,/actuator/**
      backbase.security.public.paths: /oauth/token,/convert
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    links:
      - registry

  identity:
    image: auth-server:${BB_VERSION}
    build:
      context: ./identity
      args:
        IDENTITY_BUILDER: repo.backbase.com/backbase-docker-releases/auth-server-builder:${BB_VERSION}
    ports:
      - '8180:8080'
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      BACKBASE_HTTP_CORS: "true"
      BACKBASE_HTTP_CORS_EXPOSED_HEADERS: "Location"
      BACKBASE_HTTP_CORS_ORIGINS: "http://localhost:4200,http://localhost:8080"
      KC_DB_URL: "jdbc:mysql://mysql:3306/backbase_identity?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true"
      KC_DB_USERNAME: "root"
      KC_DB_PASSWORD: "root"
      KC_LOG_LEVEL: "INFO"
      KC_LOG_CONSOLE_FORMAT: "%d{yyy:MM:dd HH:mm:ss.SSS} %-5p [%X{traceId},%X{spanId},%X{sampled}] %i --- [%t] %c{2.} : %m%n"
      KC_HOSTNAME_URL: "http://localhost:8180/auth/"
      KC_SPI_SERVICE_TOKEN_DEFAULT_URL: "http://token-converter:8080"
      KC_SPI_USER_MANAGER_CLIENT_DEFAULT_URL: "http://user-manager:8080"
      KC_SPI_CONNECTIONS_JPA_LEGACY_INITIALIZE_EMPTY: "true"
      KC_SPI_CONNECTIONS_JPA_LEGACY_MIGRATION_STRATEGY: "update"
      kc.spi-tenant-resolver-default-tenants-tbb-name: "Backbase"
      kc.spi-tenant-resolver-default-tenants-tbb-realms: "backbase"
      kc.spi-tenant-resolver-default-tenants-tmt-name: "Moustache"
      kc.spi-tenant-resolver-default-tenants-tmt-realms: "moustache"
      JAVA_TOOL_OPTIONS: "-Dquarkus.log.category.'\"com.backbase\"'.level=DEBUG \
                          -Dquarkus.log.category.'\"org.keycloak.protocol.oidc\"'.level=TRACE"
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/auth/realms/backbase/.well-known/openid-configuration", "backbase" ]
    depends_on:
      mysql:
        condition: service_healthy

  access-control:
    image: repo.backbase.com/backbase-docker-releases/access-control:${BB_VERSION}
    ports:
      - "8040:8080"
    environment:
      <<: [ *common-variables, *database-variables, *message-broker-variables ]
      backbase.multi-tenancy.datasource.default-catalog: tbb_access_control
      backbase.multi-tenancy.tenants[0].catalog: tbb_access_control
      backbase.multi-tenancy.tenants[1].catalog: tmt_access_control
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - registry
      - activemq

  user-manager:
    image: repo.backbase.com/backbase-docker-releases/user-manager:${BB_VERSION}
    ports:
      - "8060:8080"
    environment:
      <<: [ *common-variables, *database-variables, *message-broker-variables ]
      backbase.multi-tenancy.datasource.default-catalog: tbb_user_manager
      backbase.multi-tenancy.tenants[0].catalog: tbb_user_manager
      backbase.multi-tenancy.tenants[1].catalog: tmt_user_manager
      backbase.users.identity-endpoints-enabled: true
      backbase.users.identity-integration-enabled: true
      backbase.users.sync-primary-to-identity-enabled: true
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - registry
      - activemq

  identity-integration-service:
    image: repo.backbase.com/backbase-docker-releases/identity-integration-service:${BB_VERSION}
    ports:
      - "8070:8080"
    environment:
      <<: *common-variables
      identity.serverUrl: http://identity:8080/auth
      identity.masterAdmin.username: admin
      identity.masterAdmin.password: admin
      identity.realmConfiguration.fallbackOptions.enableUser: true
      identity.realmConfiguration.fallbackOptions.useTemporaryPassword: true
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    links:
      - registry

  legal-entity-bootstrap-task:
    image: ${STREAM_REGISTRY}/legal-entity-bootstrap-task:${STREAM_VERSION}
    environment:
      <<: *common-variables
      eureka.client.register-with-eureka: false
      spring.profiles.include: moustache-bank
      bootstrap.legalEntity.realmName: moustache
      backbase.stream.client.additional-headers.x-tid: tmt
    depends_on:
      token-converter:
        condition: service_healthy
      access-control:
        condition: service_healthy
      user-manager:
        condition: service_healthy
      identity-integration-service:
        condition: service_healthy
      identity:
        condition: service_healthy

  legal-entity-composition:
    image: ${STREAM_REGISTRY}/legal-entity-composition-service:${STREAM_VERSION}
    ports:
      - "8989:8080"
    environment:
      <<: [ *common-variables, *message-broker-variables ]
      bootstrap.enabled: true
      backbase.stream.client.additional-headers.x-tid: tbb #Used by the bootstrap task when initializing the application
      spring.cloud.discovery.client.simple.instances.legal-entity-integration[0].uri: http://wiremock:8080
      backbase.stream.compositions.legal-entity.chains.product-composition.enabled: true
      backbase.stream.compositions.legal-entity.chains.product-composition.async: true
      backbase.stream.compositions.legal-entity.gc-defaults.party.realmName: backbase
      backbase.stream.compositions.legal-entity.gc-defaults.party.parentExternalId: BANK
      backbase.stream.compositions.legal-entity.gc-defaults.party.referenceJobRoleNames: "Retail User - USA"
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    depends_on:
      token-converter:
        condition: service_healthy
      access-control:
        condition: service_healthy
      user-manager:
        condition: service_healthy
      identity-integration-service:
        condition: service_healthy
      identity:
        condition: service_healthy
    links:
      - registry
      - activemq

  arrangement-manager:
    image: repo.backbase.com/backbase-docker-releases/arrangement-manager:${BB_VERSION}
    profiles:
      - accounts
    ports:
      - "8050:8080"
    environment:
      <<: [ *common-variables, *database-variables, *message-broker-variables ]
      backbase.multi-tenancy.datasource.default-catalog: tbb_arrangement_manager
      backbase.multi-tenancy.tenants[0].catalog: tbb_arrangement_manager
      backbase.multi-tenancy.tenants[1].catalog: tmt_arrangement_manager
      spring.cloud.discovery.client.simple.instances.account-integration-service[0].uri: http://wiremock:8080
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - registry
      - activemq

  transaction-manager:
    image: repo.backbase.com/backbase-docker-releases/transaction-manager:${BB_VERSION}
    ports:
      - "8087:8080"
    profiles:
      - accounts
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      backbase.multi-tenancy.datasource.default-catalog: tbb_transaction_manager
      backbase.multi-tenancy.tenants[0].catalog: tbb_transaction_manager
      backbase.multi-tenancy.tenants[1].catalog: tmt_transaction_manager
      spring.cloud.discovery.client.simple.instances.transaction-integration-mock[0].uri: http://wiremock:8080
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  product-catalog-task:
    image: ${STREAM_REGISTRY}/product-catalog-task:${STREAM_VERSION}
    profiles:
      - accounts
    environment:
      <<: *common-variables
      eureka.client.register-with-eureka: false
      spring.profiles.include: moustache-bank
      backbase.stream.client.additional-headers.x-tid: tbb
    depends_on:
      token-converter:
        condition: service_healthy
      arrangement-manager:
        condition: service_healthy

  product-composition:
    image: ${STREAM_REGISTRY}/product-composition-service:${STREAM_VERSION}
    profiles:
      - accounts
    ports:
      - "8003:8080"
    environment:
      <<: [ *common-variables, *message-broker-variables ]
      spring.cloud.discovery.client.simple.instances.product-integration[0].uri: http://wiremock:8080
      backbase.stream.compositions.product.chains.transaction-manager.enabled: true
      backbase.stream.compositions.product.chains.transaction-composition.enabled: false
      backbase.stream.compositions.product.chains.payment-order-composition.enabled: false
      backbase.stream.compositions.product.login-event.enabled: true
      backbase.stream.compositions.product.login-event.realms: backbase,moustache
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    links:
      - registry
      - activemq

  audit-service:
    image: repo.backbase.com/backbase-docker-releases/audit-service:${BB_VERSION}
    ports:
      - "8088:8080"
    profiles:
      - accounts
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      backbase.multi-tenancy.datasource.default-catalog: tbb_audit_service
      backbase.multi-tenancy.tenants[0].catalog: tbb_audit_service
      backbase.multi-tenancy.tenants[1].catalog: tmt_audit_service
      backbase.audit.enable-sync-mode: true
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  edge:
    image: repo.backbase.com/backbase-docker-releases/edge:${BB_VERSION}
    profiles:
      - web
    environment:
      <<: *common-variables
      gateway.actuator.security.enabled: false
      gateway.csrf.enabled: false
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/actuator/serviceregistry" ]
    links:
      - registry

  business-app:
    image: harbor.backbase.eu/reference/business-universal:2024.10.5
    platform: linux/amd64
    profiles:
      - web
    deploy:
      resources:
        limits:
          memory: 64M
    environment:
      API_ROOT: /api/
      AUTH_URL: http://localhost:8180/auth/
      AUTH_REALM: moustache
      AUTH_CLIENT_ID: bb-tooling-client
      FALLBACK_LOCALE: en-US
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/api.conf:/nginx-config/server/15-api.conf
    links:
      - edge